default namespace = "http://www.tei-c.org/ns/1.0"
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace ns1 = "http://www.isocat.org/ns/dcr"
namespace rng = "http://relaxng.org/ns/structure/1.0"
namespace s = "http://www.ascc.net/xml/schematron"
namespace sch = "http://purl.oclc.org/dsdl/schematron"
namespace xlink = "http://www.w3.org/1999/xlink"

# Schema 
# Edition: Version 2.6.0. Last updated on
#	20th January 2014, revision 12802
# Edition Location: http://www.tei-c.org/Vault/P5/Version 2.6.0/
#

#
macro.paraContent =
  (text | model.gLike | model.phrase | model.inter | model.global | lg)*
macro.limitedContent = (text | model.limitedPhrase | model.inter)*
macro.phraseSeq = (text | model.gLike | model.phrase | model.global)*
macro.phraseSeq.limited = (text | model.limitedPhrase | model.global)*
macro.specialPara =
  (text
   | model.gLike
   | model.phrase
   | model.inter
   | model.divPart
   | model.global)*
macro.xtext = (text | model.gLike)*
data.certainty = "high" | "medium" | "low" | "unknown"
data.probability = xsd:double { minInclusive = "0" maxInclusive = "1" }
data.numeric =
  xsd:double
  | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
  | xsd:decimal
data.interval =
  xsd:float { minExclusive = "0" }
  | "regular"
  | "irregular"
  | "unknown"
data.count = xsd:nonNegativeInteger
data.temporal.w3c =
  xsd:date
  | xsd:gYear
  | xsd:gMonth
  | xsd:gDay
  | xsd:gYearMonth
  | xsd:gMonthDay
  | xsd:time
  | xsd:dateTime
data.truthValue = xsd:boolean
data.xTruthValue = xsd:boolean | "unknown" | "inapplicable"
data.language = xsd:language | ""
data.namespace = xsd:anyURI
data.outputMeasurement =
  xsd:token {
    pattern =
      "[\-+]?\d+(\.\d+)?(%|cm|mm|in|pt|pc|px|em|ex|gd|rem|vw|vh|vm)"
  }
data.pattern = xsd:token
data.point =
  xsd:token { pattern = "(\-?[0-9]+\.?[0-9]*,\-?[0-9]+\.?[0-9]*)" }
data.pointer = xsd:anyURI
data.version = xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
data.versionNumber =
  xsd:token { pattern = "[\d]+[a-z]*[\d]*(\.[\d]+[a-z]*[\d]*){0,3}" }
data.replacement = text
data.word = xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
data.sex = data.word
data.text = xsd:string
data.name = xsd:Name
data.enumerated = data.name
data.temporal.iso =
  xsd:date
  | xsd:gYear
  | xsd:gMonth
  | xsd:gDay
  | xsd:gYearMonth
  | xsd:gMonthDay
  | xsd:time
  | xsd:dateTime
  | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
att.ascribed.attributes = att.ascribed.attribute.who
att.ascribed.attribute.who =
  
  ## indique la personne ou le groupe de personnes à qui le contenu de l'élément est attribué.
  attribute who {
    list { data.pointer+ }
  }?
att.canonical.attributes =
  att.canonical.attribute.key, att.canonical.attribute.ref
att.canonical.attribute.key =
  
  ## fournit un moyen, défini de façon externe, d'identifier l'entité (ou les entités) nommé(es), en utilisant une valeur codée d'un certain type.
  attribute key { data.text }?
att.canonical.attribute.ref =
  
  ## (référence) fournit un moyen explicite de localiser une définition complète de l'entité nommée au moyen d'un ou plusieurs URIs.
  attribute ref {
    list { data.pointer+ }
  }?
att.ranging.attributes =
  att.ranging.attribute.atLeast,
  att.ranging.attribute.atMost,
  att.ranging.attribute.min,
  att.ranging.attribute.max,
  att.ranging.attribute.confidence
att.ranging.attribute.atLeast =
  
  ## donne une estimation de la valeur minimum pour la mesure.
  attribute atLeast { data.numeric }?
att.ranging.attribute.atMost =
  
  ## donne une estimation de la valeur maximum pour la mesure.
  attribute atMost { data.numeric }?
att.ranging.attribute.min =
  
  ## lorsque la mesure résume plus d'une observation, fournit la valeur minimum observée.
  attribute min { data.numeric }?
att.ranging.attribute.max =
  
  ## lorsque la mesure résume plus d'une observation, fournit la valeur maximum observée.
  attribute max { data.numeric }?
att.ranging.attribute.confidence =
  
  ## specifies the degree of statistical confidence (between zero and one) that a value falls within the range specified by min and max, or the proportion of observed values that fall within that range.
  attribute confidence { data.probability }?
att.dimensions.attributes =
  att.ranging.attributes,
  att.dimensions.attribute.unit,
  att.dimensions.attribute.quantity,
  att.dimensions.attribute.extent,
  att.dimensions.attribute.precision,
  att.dimensions.attribute.scope
att.dimensions.attribute.unit =
  
  ## noms des unités utilisées pour la mesure.
  ## Suggested values include: 1] cm(centimetres) ; 2] mm(millimetres) ; 3] in(inches) ; 4] lines; 5] chars(characters) 
  attribute unit {
    
    ## (centimètres) 
    "cm"
    | 
      ## (millimètres) 
      "mm"
    | 
      ## (pouces) 
      "in"
    | 
      ## lignes de texte
      "lines"
    | 
      ## (characters) caractères du texte
      "chars"
    | xsd:Name
  }?
att.dimensions.attribute.quantity =
  
  ## spécifie la longueur dans les unités indiquées
  attribute quantity { data.numeric }?
att.dimensions.attribute.extent =
  
  ## indique la dimension de l'objet en utilisant un vocabulaire spécifique à un projet qui combine la quantité et l'unité dans une chaîne seule de mots.
  attribute extent { data.text }?
att.dimensions.attribute.precision =
  
  ## caractérise la précision des valeurs spécifiées par les autres attributs.
  attribute precision { data.certainty }?
att.dimensions.attribute.scope =
  
  ## spécifie l'applicabilité de cette mesure, là où plus d'un objet est mesuré.
  ## Sample values include: 1] all; 2] most; 3] range
  attribute scope { data.enumerated }?
att.damaged.attributes =
  att.dimensions.attributes,
  att.damaged.attribute.hand,
  att.damaged.attribute.agent,
  att.damaged.attribute.degree,
  att.damaged.attribute.group
att.damaged.attribute.hand =
  
  ## dans le cas de dommages (effacement volontaire, etc.) attribuable à une main identifiable, identifie cette main.
  attribute hand { data.pointer }?
att.damaged.attribute.agent =
  
  ## caractérise la raison des dommages, lorsqu'elle peut être identifiée
  ## Sample values include: 1] rubbing; 2] mildew; 3] smoke
  attribute agent { data.enumerated }?
att.damaged.attribute.degree =
  
  ## indique le degré (la gravité) du dommage subi, selon une grille appropriée. L'attribut degree doit être utilisé dans le seul cas où le texte peut être lu avec certitude ; le texte restitué en utilisant d'autres sources doit être encodé au moyen de l'élément supplied.
  attribute degree { data.probability | data.certainty }?
att.damaged.attribute.group =
  
  ## permet d'assigner un numéro quelconque à chaque fragment endommagé considéré comme faisant partie d'un ensemble résultant du même phénomène physique
  attribute group { data.count }?
att.breaking.attributes = att.breaking.attribute.break
att.breaking.attribute.break =
  
  ## indique si l'élément qui porte cet attribut peut être considéré comme une espace blanc indiquant la fin d'un mot orthographique.
  attribute break { data.enumerated }?
att.cReferencing.attributes = att.cReferencing.attribute.cRef
att.cReferencing.attribute.cRef =
  
  ## (référence canonique) précise la cible du pointeur en fournissant une référence canonique issue d'un modèle défini par un élément refsDecldans l'En-tête TEI.
  attribute cRef { data.text }?
att.datable.w3c.attributes =
  att.datable.w3c.attribute.when,
  att.datable.w3c.attribute.notBefore,
  att.datable.w3c.attribute.notAfter,
  att.datable.w3c.attribute.from,
  att.datable.w3c.attribute.to
att.datable.w3c.attribute.when =
  
  ## spécifie une date exacte pour un événement sous une forme normalisée, par ex. aaaa-mm-jj.
  attribute when { data.temporal.w3c }?
att.datable.w3c.attribute.notBefore =
  
  ## spécifie la date la plus ancienne pour l'événement sous une forme normalisée, par ex. aaaa-mm-jj
  attribute notBefore { data.temporal.w3c }?
att.datable.w3c.attribute.notAfter =
  
  ## spécifie la date la plus récente possible pour l'événement sous une forme normalisée, par ex. aaaa-mm-jj
  attribute notAfter { data.temporal.w3c }?
att.datable.w3c.attribute.from =
  
  ## indique le point de départ d'une période sous une forme normalisée, par ex. aaaa-mm-jj
  attribute from { data.temporal.w3c }?
att.datable.w3c.attribute.to =
  
  ## indique le terme de la période sous une forme normalisée, par ex. aaaa-mm-jj
  attribute to { data.temporal.w3c }?
att.datable.attributes =
  att.datable.w3c.attributes,
  att.datable.iso.attributes,
  att.datable.custom.attributes,
  att.datable.attribute.calendar,
  att.datable.attribute.period
att.datable.attribute.calendar =
  
  ## indique le système ou le calendrier auquel appartient la date exprimée dans le contenu de l'élément.
  attribute calendar { data.pointer }?
sch:pattern [
  id = "test21-att.datable-calendar-calendar-constraint"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@calendar]"
    "\x{a}" ~
    "            "
    sch:assert [
      test = "string-length(.) gt 0"
      "\x{a}" ~
      "@calendar indicates the system or calendar to which the date represented by the content of this element\x{a}" ~
      "belongs, but this "
      sch:name [ ]
      " element has no textual content."
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
att.datable.attribute.period =
  
  ## fournit un pointeur vers un emplacement donné définissant une période de temps nommée durant laquelle l'item concerné s'inscrit.
  attribute period { data.pointer }?
att.datcat.attributes =
  att.datcat.attribute.datcat, att.datcat.attribute.valueDatcat
att.datcat.attribute.datcat =
  
  ## contains a PID (persistent identifier) that aligns the given element with the appropriate Data Category (or categories) in ISOcat.
  attribute ns1:datcat {
    list { data.pointer+ }
  }?
att.datcat.attribute.valueDatcat =
  
  ## contains a PID (persistent identifier) that aligns the content of the given element or the value of the given attribute with the appropriate simple Data Category (or categories) in ISOcat.
  attribute ns1:valueDatcat {
    list { data.pointer+ }
  }?
att.declarable.attributes = att.declarable.attribute.default
att.declarable.attribute.default =
  
  ## Indique si oui ou non cet élément est affecté par défaut quand son élément parent a été sélectionné.
  [ a:defaultValue = "false" ]
  attribute default {
    
    ## cet élément est choisi si son parent est choisi
    "true"
    | 
      ## cet élément ne peut être sélectionné qu'explicitement, à moins qu'il ne soit le seul de ce type, auquel cas il est sélectionné si son parent a été choisi
      "false"
  }?
att.declaring.attributes = att.declaring.attribute.decls
att.declaring.attribute.decls =
  
  ## identifie un ou plusieurséléments déclarables dans l'en-tête TEI, qui sont destinés à s'appliquer à l'élément portant cet attribut et à son contenu.
  attribute decls {
    list { data.pointer+ }
  }?
att.fragmentable.attributes = att.fragmentable.attribute.part
att.fragmentable.attribute.part =
  
  ## specifies whether or not its parent element is fragmented in some way, typically by some other overlapping structure: for example a speech which is divided between two or more verse stanzas, a paragraph which is split across a page division, a verse line which is divided between two speakers.
  [ a:defaultValue = "N" ]
  attribute part {
    
    ## (yes) the element is fragmented in some (unspecified) respect
    "Y"
    | 
      ## (no) either the element is not fragmented, or no claim is made as to its completeness.
      "N"
    | 
      ## (initial) this is the initial part of a fragmented element
      "I"
    | 
      ## (medial) this is a medial part of a fragmented element
      "M"
    | 
      ## (final) this is the final part of a fragmented element
      "F"
  }?
att.divLike.attributes =
  att.fragmentable.attributes,
  att.divLike.attribute.org,
  att.divLike.attribute.sample
att.divLike.attribute.org =
  
  ## (organisation) précise l'organisation du contenu de la division
  [ a:defaultValue = "uniform" ]
  attribute org {
    
    ## aucune déclaration n'est faite quant à l'ordre dans lequel les composants de cette division doivent être traités ou bien quant à leurs corrélations
    "composite"
    | 
      ## contenu uniforme : c'est-à-dire que les composants de cet élément sont à considérer comme formant une unité logique et doivent être traités dans l'ordre séquentiel
      "uniform"
  }?
att.divLike.attribute.sample =
  
  ## indique si cette division est un échantillon de la source originale et dans ce cas, de quelle partie.
  [ a:defaultValue = "complete" ]
  attribute sample {
    
    ## par rapport à la source, lacune à la fin de la division
    "initial"
    | 
      ## par rapport à la source, lacune au début et à la fin de la division
      "medial"
    | 
      ## par rapport à la source, lacune au début de la division
      "final"
    | 
      ## par rapport à la source, position de l'échantillon inconnue
      "unknown"
    | 
      ## la division n'est pas un échantillon
      "complete"
  }?
att.docStatus.attributes = att.docStatus.attribute.status
att.docStatus.attribute.status =
  
  ## describes the status of a document either currently or, when associated with a dated element, at the time indicated.
  ## Sample values include: 1] approved; 2] candidate; 3] cleared; 4] deprecated; 5] draft; 6] embargoed; 7] expired; 8] frozen; 9] galley; 10] proposed; 11] published; 12] recommendation; 13] submitted; 14] unfinished; 15] withdrawn
  [ a:defaultValue = "draft" ] attribute status { data.enumerated }?
att.responsibility.attributes =
  att.source.attributes,
  att.responsibility.attribute.cert,
  att.responsibility.attribute.resp
att.responsibility.attribute.cert =
  
  ## (certitude) donne le degré de certitude associée à l'intervention ou à l'interprétation.
  attribute cert { data.certainty }?
att.responsibility.attribute.resp =
  
  ## (responsable) indique l'agent responsable de l'intervention ou de l'interprétation, par exemple un éditeur ou un transcripteur.
  attribute resp {
    list { data.pointer+ }
  }?
att.editLike.attributes =
  att.dimensions.attributes,
  att.responsibility.attributes,
  att.editLike.attribute.evidence,
  att.editLike.attribute.instant
att.editLike.attribute.evidence =
  
  ## indique la nature de la preuve attestant la fiabilité ou la justesse de l'intervention ou de l'interprétation.
  ## Suggested values include: 1] internal; 2] external; 3] conjecture
  attribute evidence {
    list {
      (
       ## l'intervention est justifiée par une preuve interne
       "internal"
       | 
         ## l'intervention est justifiée par une preuve externe
         "external"
       | 
         ## l'intervention ou l'interprétation a été faite par le rédacteur, le catalogueur, ou le chercheur sur la base de leur expertise.
         "conjecture"
       | xsd:Name)+
    }
  }?
att.editLike.attribute.instant =
  
  ## indicates whether this is an instant revision or not.
  [ a:defaultValue = "false" ] attribute instant { data.xTruthValue }?
att.global.attributes =
  att.global.linking.attributes,
  att.global.facs.attributes,
  att.global.change.attributes,
  att.global.attribute.xmlid,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.style,
  att.global.attribute.rendition,
  att.global.attribute.xmlbase,
  att.global.attribute.xmlspace
att.global.attribute.xmlid =
  
  ## (identifiant) fournit un identifiant unique pour l'élément qui porte l'attribut
  attribute xml:id { xsd:ID }?
att.global.attribute.xmllang =
  
  ## (langue) indique la langue du contenu de l'élément en utilisant les codes du RFC 3066
  attribute xml:lang { data.language }?
att.global.attribute.rend =
  
  ## (interprétation) foobar
  attribute rend {
    list { data.word+ }
  }?
att.global.attribute.style =
  
  ## contains an expression in some formal style definition language which defines the rendering or presentation used for this element in the source text
  attribute style { data.text }?
att.global.attribute.rendition =
  
  ## pointe vers une description du rendu ou de la présentation utilisés pour cet élément dans le texte source
  attribute rendition {
    list { data.pointer+ }
  }?
att.global.attribute.xmlbase =
  
  ## donne une référence URI de base au moyen de laquelle les applications peuvent résoudre des références d'URI relatives en références d'URI absolues
  attribute xml:base { data.pointer }?
att.global.attribute.xmlspace =
  
  ## signale que les applications doivent préserver l'espace blanc
  attribute xml:space {
    
    ## signals that the application's default white-space processing modes are acceptable
    "default"
    | 
      ## indicates the intent that applications preserve all white space
      "preserve"
  }?
att.handFeatures.attributes =
  att.handFeatures.attribute.scribe,
  att.handFeatures.attribute.scribeRef,
  att.handFeatures.attribute.script,
  att.handFeatures.attribute.scriptRef,
  att.handFeatures.attribute.medium,
  att.handFeatures.attribute.scope
att.handFeatures.attribute.scribe =
  
  ## donne un nom normalisé ou un autre identifiant pour le scribe reconnu comme responsable de cette main.
  attribute scribe { data.name }?
att.handFeatures.attribute.scribeRef =
  
  ## points to a full description of the scribe concerned, typically supplied by a person element elsewhere in the description.
  attribute scribeRef {
    list { data.pointer+ }
  }?
att.handFeatures.attribute.script =
  
  ## caractérise la calligraphie ou le style d'écriture particuliers utilisés par cette main, par exemple écriture anglaise, de chancellerie, italienne, etc.
  attribute script {
    list { data.name+ }
  }?
att.handFeatures.attribute.scriptRef =
  
  ## points to a full description of the script or writing style used by this hand, typically supplied by a scriptNote element elsewhere in the description.
  attribute scriptRef {
    list { data.pointer+ }
  }?
att.handFeatures.attribute.medium =
  
  ## décrit la teinte ou le type d'encre, par exemple brune, ou un autre outil d'écriture, par exemple un crayon.
  attribute medium { data.enumerated }?
att.handFeatures.attribute.scope =
  
  ## Spécifie la fréquence d'apparition de cette main dans le manuscrit.
  attribute scope {
    
    ## il n'y a que cette main dans le manuscrit.
    "sole"
    | 
      ## cette main est utilisée dans la majeure partie du manuscrit.
      "major"
    | 
      ## cette main est utilisée occasionnellement dans le manuscrit.
      "minor"
  }?
att.internetMedia.attributes = att.internetMedia.attribute.mimeType
att.internetMedia.attribute.mimeType =
  
  ## (type de média MIME) spécifie le type MIME (multipurpose internet mail extension) applicable.
  attribute mimeType {
    list { data.word+ }
  }?
att.media.attributes =
  att.internetMedia.attributes,
  att.media.attribute.width,
  att.media.attribute.height,
  att.media.attribute.scale
att.media.attribute.width =
  
  ## Where the media are displayed, indicates the display width
  attribute width { data.outputMeasurement }?
att.media.attribute.height =
  
  ## Where the media are displayed, indicates the display height
  attribute height { data.outputMeasurement }?
att.media.attribute.scale =
  
  ## Where the media are displayed, indicates a scale factor to be applied when generating the desired display size
  attribute scale { data.numeric }?
att.resourced.attributes = att.resourced.attribute.url
att.resourced.attribute.url =
  
  ## (adresse URL) specifies the URL from which the media concerned may be obtained.
  attribute url { data.pointer }
att.measurement.attributes =
  att.measurement.attribute.unit,
  att.measurement.attribute.quantity,
  att.measurement.attribute.commodity
att.measurement.attribute.unit =
  
  ## (unité) indique les unités de mesure utilisées ; il s'agit en général du symbole normalisé pour les unités dont on a besoin.
  ## Suggested values include: 1] m(metre) ; 2] kg(kilogram) ; 3] s(second) ; 4] Hz(hertz) ; 5] Pa(pascal) ; 6] Ω(ohm) ; 7] L(litre) ; 8] t(tonne) ; 9] ha(hectare) ; 10] Å(ångström) ; 11] mL(millilitre) ; 12] cm(centimetre) ; 13] dB(decibel) ; 14] kbit(kilobit) ; 15] Kibit(kibibit) ; 16] kB(kilobyte) ; 17] KiB(kibibyte) ; 18] MB(megabyte) ; 19] MiB(mebibyte) 
  attribute unit {
    
    ## (mètre) unité SI (système international) de longueur
    "m"
    | 
      ## (kilogramme) unité SI de masse
      "kg"
    | 
      ## (seconde) unité SI de temps
      "s"
    | 
      ## (hertz) unité SI de fréquence
      "Hz"
    | 
      ## (pascal) unité SI de pression
      "Pa"
    | 
      ## (ohm) unité SI de résistance électrique
      "Ω"
    | 
      ## (litre) 1 dm³
      "L"
    | 
      ## (tonne) 10³ kg
      "t"
    | 
      ## (hectare) 1 hm²
      "ha"
    | 
      ## (ångström) 10⁻¹⁰ m
      "Å"
    | 
      ## (millilitre) 
      "mL"
    | 
      ## (centimètre) 
      "cm"
    | 
      ## (décibel) Voir remarques, ci-dessous.
      "dB"
    | 
      ## (kilobit) 10³ ou 1000 bits
      "kbit"
    | 
      ## (kibibit) 2¹⁰ ou 1024 bits
      "Kibit"
    | 
      ## (kilo-octet) 10³ ou 1000 octets
      "kB"
    | 
      ## (kibioctet) 2¹⁰ ou 1024 octets
      "KiB"
    | 
      ## (mégaoctet) 10⁶ ou 1 000 000 octets
      "MB"
    | 
      ## (mébioctet) 2²⁰ ou 1 048 576 octets
      "MiB"
    | xsd:Name
  }?
att.measurement.attribute.quantity =
  
  ## (quantité) spécifie le nombre des unités indiquées que comprend la mesure.
  attribute quantity { data.numeric }?
att.measurement.attribute.commodity =
  
  ## (article) indique ce qui est mesuré.
  attribute commodity {
    list { data.word+ }
  }?
att.naming.attributes =
  att.canonical.attributes,
  att.naming.attribute.altname,
  att.naming.attribute.role,
  att.naming.attribute.nymRef
att.naming.attribute.altname =
  
  ## alternative name
  attribute altname { text }?
att.naming.attribute.role =
  
  ## may be used to specify further information about the entity referenced by this name, for example the occupation of a person, or the status of a place.
  attribute role { data.enumerated }?
att.naming.attribute.nymRef =
  
  ## (référence au nom canonique) indique comment localiser la forme canonique (nym) des noms qui sont associés à l'objet nommé par l'élément qui le contient.
  attribute nymRef {
    list { data.pointer+ }
  }?
att.placement.attributes = att.placement.attribute.place
att.placement.attribute.place =
  
  ## specifie où cet item se trouve
  ## Suggested values include: 1] below; 2] bottom; 3] margin; 4] top; 5] opposite; 6] overleaf; 7] above; 8] end; 9] inline; 10] inspace
  attribute place {
    list {
      (
       ## au-dessous de la ligne
       "below"
       | 
         ## dans la marge inférieure
         "bottom"
       | 
         ## dans la marge (gauche, droite ou les deux en même temps)
         "margin"
       | 
         ## dans la marge supérieure
         "top"
       | 
         ## sur la page opposée
         "opposite"
       | 
         ## de l'autre côté de la feuille
         "overleaf"
       | 
         ## au-dessus de la ligne
         "above"
       | 
         ## à la fin, par exemple d'un chapitre ou d'un volume
         "end"
       | 
         ## dans le corps du texte
         "inline"
       | 
         ## dans un espace prédéfini, par exemple à gauche d'un scripteur précédent
         "inspace"
       | xsd:Name)+
    }
  }?
att.typed.attributes =
  att.typed.attribute.type, att.typed.attribute.subtype
att.typed.attribute.type =
  
  ## caractérise l'élément en utilisant n'importe quel système ou typologie de classification approprié.
  attribute type {
    
    ## first type
    "A"
    | 
      ## second type
      "B"
  }?
att.typed.attribute.subtype =
  
  ## (sous-type) fournit une sous-catégorisation de l'élément, si c'est nécessaire.
  attribute subtype { data.enumerated }?
sch:pattern [
  id = "test21-att.typed-subtypeTyped-constraint"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "*[@subtype]"
    "\x{a}" ~
    "        "
    sch:assert [
      test = "@type"
      "The "
      sch:name [ ]
      " element should not be categorized in detail with @subtype\x{a}" ~
      " unless also categorized in general with @type"
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
att.pointing.attributes =
  att.pointing.attribute.targetLang,
  att.pointing.attribute.target,
  att.pointing.attribute.evaluate
att.pointing.attribute.targetLang =
  
  ## specifies the language of the content to be found at the destination referenced by target, using a language tag generated according to BCP 47.
  attribute targetLang { data.language }?
sch:pattern [
  id = "test21-att.pointing-targetLang-targetLang-constraint"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[not(self::tei:schemaSpec)][@targetLang]"
    "\x{a}" ~
    "            "
    sch:assert [
      test = "count(@target)"
      "@targetLang can only be used if @target is specified."
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
att.pointing.attribute.target =
  
  ## précise la cible de la référence en donnant une ou plusieurs références URI
  attribute target {
    list { data.pointer+ }
  }?
att.pointing.attribute.evaluate =
  
  ## (évalué) détermine le sens attendu, si la cible d'un pointeur est elle-même un pointeur.
  attribute evaluate {
    
    ## si l'élément pointé est lui-même un pointeur, alors on prendra la cible de ce pointeur, et ainsi de suite jusqu'à trouver un élément qui n'est pas un pointeur.
    "all"
    | 
      ## si l'élément pointé est lui-même un pointeur, alors sa cible (qui est ou non un pointeur) devient la cible retenue.
      "one"
    | 
      ## aucune évaluation ultérieure des cibles n'est menée au-delà de la recherche de l'élément désigné dans la cible du pointeur.
      "none"
  }?
att.pointing.group.attributes =
  att.pointing.attributes,
  att.typed.attributes,
  att.pointing.group.attribute.domains,
  att.pointing.group.attribute.targFunc
att.pointing.group.attribute.domains =
  
  ## spécifie, facultativement, les identifiants des éléments englobant tous les éléments indiqués par le contenu de cet élément.
  attribute domains {
    list { data.pointer, data.pointer, data.pointer* }
  }?
att.pointing.group.attribute.targFunc =
  
  ## (fonction cible) décrit la fonction de chacune des valeurs de l'attribut target pour les balises incluses link, join, ou alt.
  attribute targFunc {
    list { data.word, data.word, data.word* }
  }?
att.segLike.attributes =
  att.datcat.attributes,
  att.fragmentable.attributes,
  att.segLike.attribute.function
att.segLike.attribute.function =
  
  ## (fonction) caractérise la fonction du segment.
  attribute function { data.enumerated }?
att.sortable.attributes = att.sortable.attribute.sortKey
att.sortable.attribute.sortKey =
  
  ## supplies the sort key for this element in an index, list or group which contains it.
  attribute sortKey { data.word }?
att.edition.attributes =
  att.edition.attribute.ed, att.edition.attribute.edRef
att.edition.attribute.ed =
  
  ## (édition) fournit un identifiant arbitraire pour l'édition source dans laquelle la caractéristique associée (par exemple, une page, une colonne ou un saut de ligne) apparaît à ce point du texte.
  attribute ed {
    list { data.word+ }
  }?
att.edition.attribute.edRef =
  
  ## (edition reference) provides a pointer to the source edition in which the associated feature (for example, a page, column, or line break) occurs at this point in the text.
  attribute edRef {
    list { data.pointer+ }
  }?
att.spanning.attributes = att.spanning.attribute.spanTo
att.spanning.attribute.spanTo =
  
  ## indique la fin d'un passage introduit par l'élément portant cet attribut.
  attribute spanTo { data.pointer }?
sch:pattern [
  id = "test21-att.spanning-spanTo-spanTo-2-constraint"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@spanTo]"
    "\x{a}" ~
    "            "
    sch:assert [
      test =
        "id(substring(@spanTo,2)) and following::*[@xml:id=substring(current()/@spanTo,2)]"
      "\x{a}" ~
      "The element indicated by @spanTo ("
      sch:value-of [ select = "@spanTo" ]
      ") must follow the current element "
      sch:name [ ]
      "\x{a}" ~
      "                  "
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
att.styleDef.attributes =
  att.styleDef.attribute.scheme, att.styleDef.attribute.schemeVersion
att.styleDef.attribute.scheme =
  
  ## identifie la langue employée pour décrire le rendu
  attribute scheme {
    
    ## langage CSS (Cascading Stylesheet )
    "css"
    | 
      ## Langage XSL (Extensible Stylesheet )Formatting Objects
      "xslfo"
    | 
      ## description en texte libre non structuré.
      "free"
    | 
      ## langue de description de l'interprétation définie par l'utilisateur
      "other"
  }?
att.styleDef.attribute.schemeVersion =
  
  ## supplies a version number for the style language provided in scheme.
  attribute schemeVersion { data.versionNumber }?
sch:pattern [
  id =
    "test21-att.styleDef-schemeVersion-schemeVersionRequiresScheme-constraint"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@schemeVersion]"
    "\x{a}" ~
    "            "
    sch:assert [
      test = "@scheme and not(@scheme = 'free')"
      "\x{a}" ~
      "              @schemeVersion can only be used if @scheme is specified.\x{a}" ~
      "            "
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
att.timed.attributes =
  att.timed.attribute.start, att.timed.attribute.end
att.timed.attribute.start =
  
  ## indique dans un alignement temporel (un ordre chronologique) l'endroit où commence cet élément.
  attribute start { data.pointer }?
att.timed.attribute.end =
  
  ## indique l'endroit où se termine cet élément dans un alignement temporel.
  attribute end { data.pointer }?
att.transcriptional.attributes =
  att.editLike.attributes,
  att.transcriptional.attribute.hand,
  att.transcriptional.attribute.status,
  att.transcriptional.attribute.cause,
  att.transcriptional.attribute.seq
att.transcriptional.attribute.hand =
  
  ## signale la main de celui qui est intervenue.
  attribute hand { data.pointer }?
att.transcriptional.attribute.status =
  
  ## indique la conséquence de l'intervention, par exemple dans le cas d'un effacement, une biffure, qui inclut trop ou pas assez de texte, ou dans le cas d'un ajout, une insertion, qui reproduit une portion du texte déjà présent.
  ## Sample values include: 1] duplicate; 2] duplicate-partial; 3] excessStart; 4] excessEnd; 5] shortStart; 6] shortEnd; 7] partial; 8] unremarkable
  [ a:defaultValue = "unremarkable" ]
  attribute status { data.enumerated }?
att.transcriptional.attribute.cause =
  
  ## documents the presumed cause for the intervention.
  attribute cause {
    
    ## repeated for the purpose of fixation
    "fix"
    | 
      ## repeated to clarify a previously illegible or badly written text or mark
      "unclear"
  }?
att.transcriptional.attribute.seq =
  
  ## (séquence) assigne un numéro séquentiel relatif à l'ordre dans lequel les traits encodés portant cet attribut sont supposés être apparus.
  attribute seq { data.count }?
att.translatable.attributes = att.translatable.attribute.versionDate
att.translatable.attribute.versionDate =
  
  ## spécifie le nom de la version ou le numéro de la source dont la version traduite a été tirée.
  attribute versionDate { data.temporal.w3c }?
att.citing.attributes =
  att.citing.attribute.unit,
  att.citing.attribute.from,
  att.citing.attribute.to
att.citing.attribute.unit =
  
  ## identifie le type d'information que transmet l'élément, par exemple colonnes, pages, volume, etc.
  ## Suggested values include: 1] volume; 2] issue; 3] page; 4] line; 5] chapter; 6] part; 7] column
  attribute unit {
    
    ## l'élément contient un numéro de volume.
    "volume"
    | 
      ## l'élément contient un numéro de livraison ou bien un numéro de volume et de livraison.
      "issue"
    | 
      ## l'élément contient un nombre de pages ou l'étendue de sélection des pages.
      "page"
    | 
      ## the element contains a line number or line range.
      "line"
    | 
      ## (chapitre) l'élément contient une indication de chapitre (le numéro et/ou le titre)
      "chapter"
    | 
      ## l'élément identifie une partie d'un livre ou une anthologie.
      "part"
    | 
      ## the element identifies a column.
      "column"
    | xsd:Name
  }?
att.citing.attribute.from =
  
  ## specifies the starting point of the range of units indicated by the unit attribute.
  attribute from { data.word }?
att.citing.attribute.to =
  
  ## specifies the end-point of the range of units indicated by the unit attribute.
  attribute to { data.word }?
model.nameLike.agent = name | orgName | persName
model.nameLike.agent_alternation = name | orgName | persName
model.nameLike.agent_sequence = name, orgName, persName
model.nameLike.agent_sequenceOptional = name?, orgName?, persName?
model.nameLike.agent_sequenceOptionalRepeatable =
  name*, orgName*, persName*
model.nameLike.agent_sequenceRepeatable = name+, orgName+, persName+
model.segLike = seg
model.hiLike = hi
model.hiLike_alternation = hi
model.hiLike_sequence = hi
model.hiLike_sequenceOptional = hi?
model.hiLike_sequenceOptionalRepeatable = hi*
model.hiLike_sequenceRepeatable = hi+
model.emphLike =
  foreign
  | emph
  | distinct
  | mentioned
  | soCalled
  | gloss
  | term
  | title
model.emphLike_alternation =
  foreign
  | emph
  | distinct
  | mentioned
  | soCalled
  | gloss
  | term
  | title
model.emphLike_sequence =
  foreign, emph, distinct, mentioned, soCalled, gloss, term, title
model.emphLike_sequenceOptional =
  foreign?,
  emph?,
  distinct?,
  mentioned?,
  soCalled?,
  gloss?,
  term?,
  title?
model.emphLike_sequenceOptionalRepeatable =
  foreign*,
  emph*,
  distinct*,
  mentioned*,
  soCalled*,
  gloss*,
  term*,
  title*
model.emphLike_sequenceRepeatable =
  foreign+,
  emph+,
  distinct+,
  mentioned+,
  soCalled+,
  gloss+,
  term+,
  title+
model.highlighted = model.hiLike | model.emphLike
model.dateLike = date | time
model.dateLike_alternation = date | time
model.dateLike_sequence = date, time
model.dateLike_sequenceOptional = date?, time?
model.dateLike_sequenceOptionalRepeatable = date*, time*
model.dateLike_sequenceRepeatable = date+, time+
model.dimLike = height | depth | width
model.measureLike =
  num | measure | measureGrp | geo | dim | height | depth | width
model.measureLike_alternation =
  num | measure | measureGrp | geo | dim | height | depth | width
model.measureLike_sequence =
  num, measure, measureGrp, geo, dim, height, depth, width
model.measureLike_sequenceOptional =
  num?, measure?, measureGrp?, geo?, dim?, height?, depth?, width?
model.measureLike_sequenceOptionalRepeatable =
  num*, measure*, measureGrp*, geo*, dim*, height*, depth*, width*
model.measureLike_sequenceRepeatable =
  num+, measure+, measureGrp+, geo+, dim+, height+, depth+, width+
model.egLike = notAllowed
model.egLike_alternation = notAllowed
model.egLike_sequence = empty
model.egLike_sequenceOptional = empty
model.egLike_sequenceOptionalRepeatable = empty
model.egLike_sequenceRepeatable = notAllowed
model.graphicLike = media | graphic | binaryObject
model.offsetLike = offset | geogFeat
model.offsetLike_alternation = offset | geogFeat
model.offsetLike_sequence = offset, geogFeat
model.offsetLike_sequenceOptional = offset?, geogFeat?
model.offsetLike_sequenceOptionalRepeatable = offset*, geogFeat*
model.offsetLike_sequenceRepeatable = offset+, geogFeat+
model.pPart.msdesc =
  catchwords
  | dimensions
  | heraldry
  | locus
  | locusGrp
  | material
  | objectType
  | origDate
  | origPlace
  | secFol
  | signatures
  | stamp
  | watermark
model.pPart.editorial = choice | abbr | expan | ex | am | subst
model.pPart.editorial_alternation =
  choice | abbr | expan | ex | am | subst
model.pPart.editorial_sequence = choice, abbr, expan, ex, am, subst
model.pPart.editorial_sequenceOptional =
  choice?, abbr?, expan?, ex?, am?, subst?
model.pPart.editorial_sequenceOptionalRepeatable =
  choice*, abbr*, expan*, ex*, am*, subst*
model.pPart.editorial_sequenceRepeatable =
  choice+, abbr+, expan+, ex+, am+, subst+
model.pPart.transcriptional =
  sic
  | corr
  | reg
  | orig
  | add
  | del
  | unclear
  | damage
  | handShift
  | restore
  | supplied
  | surplus
  | mod
  | redo
  | retrace
  | undo
model.pPart.transcriptional_alternation =
  sic
  | corr
  | reg
  | orig
  | add
  | del
  | unclear
  | damage
  | handShift
  | restore
  | supplied
  | surplus
  | mod
  | redo
  | retrace
  | undo
model.pPart.transcriptional_sequence =
  sic,
  corr,
  reg,
  orig,
  add,
  del,
  unclear,
  damage,
  handShift,
  restore,
  supplied,
  surplus,
  mod,
  redo,
  retrace,
  undo
model.pPart.transcriptional_sequenceOptional =
  sic?,
  corr?,
  reg?,
  orig?,
  add?,
  del?,
  unclear?,
  damage?,
  handShift?,
  restore?,
  supplied?,
  surplus?,
  mod?,
  redo?,
  retrace?,
  undo?
model.pPart.transcriptional_sequenceOptionalRepeatable =
  sic*,
  corr*,
  reg*,
  orig*,
  add*,
  del*,
  unclear*,
  damage*,
  handShift*,
  restore*,
  supplied*,
  surplus*,
  mod*,
  redo*,
  retrace*,
  undo*
model.pPart.transcriptional_sequenceRepeatable =
  sic+,
  corr+,
  reg+,
  orig+,
  add+,
  del+,
  unclear+,
  damage+,
  handShift+,
  restore+,
  supplied+,
  surplus+,
  mod+,
  redo+,
  retrace+,
  undo+
model.pPart.edit = model.pPart.editorial | model.pPart.transcriptional
model.linePart =
  model.segLike
  | model.hiLike
  | model.pPart.transcriptional
  | choice
  | zone
  | line
model.ptrLike = ptr | ref
model.global.meta =
  index
  | link
  | linkGrp
  | timeline
  | join
  | joinGrp
  | alt
  | altGrp
  | substJoin
  | listTranspose
model.milestoneLike = milestone | gb | pb | lb | cb | anchor | fw
model.gLike = notAllowed
model.biblLike = bibl | biblStruct | listBibl | biblFull | msDesc
model.biblLike_alternation =
  bibl | biblStruct | listBibl | biblFull | msDesc
model.biblLike_sequence = bibl, biblStruct, listBibl, biblFull, msDesc
model.biblLike_sequenceOptional =
  bibl?, biblStruct?, listBibl?, biblFull?, msDesc?
model.biblLike_sequenceOptionalRepeatable =
  bibl*, biblStruct*, listBibl*, biblFull*, msDesc*
model.biblLike_sequenceRepeatable =
  bibl+, biblStruct+, listBibl+, biblFull+, msDesc+
model.headLike = head
model.headLike_alternation = head
model.headLike_sequence = head
model.headLike_sequenceOptional = head?
model.headLike_sequenceOptionalRepeatable = head*
model.headLike_sequenceRepeatable = head+
model.labelLike = desc | label
model.labelLike_alternation = desc | label
model.labelLike_sequence = desc, label
model.labelLike_sequenceOptional = desc?, label?
model.labelLike_sequenceOptionalRepeatable = desc*, label*
model.labelLike_sequenceRepeatable = desc+, label+
model.listLike =
  \list | listOrg | listEvent | listPerson | listPlace | listNym
model.listLike_alternation =
  \list | listOrg | listEvent | listPerson | listPlace | listNym
model.listLike_sequence =
  \list, listOrg, listEvent, listPerson, listPlace, listNym
model.listLike_sequenceOptional =
  \list?, listOrg?, listEvent?, listPerson?, listPlace?, listNym?
model.listLike_sequenceOptionalRepeatable =
  \list*, listOrg*, listEvent*, listPerson*, listPlace*, listNym*
model.listLike_sequenceRepeatable =
  \list+, listOrg+, listEvent+, listPerson+, listPlace+, listNym+
model.noteLike = note
model.lLike = l
model.lLike_alternation = l
model.lLike_sequence = l
model.lLike_sequenceOptional = l?
model.lLike_sequenceOptionalRepeatable = l*
model.lLike_sequenceRepeatable = l+
model.pLike = p | ab
model.pLike_alternation = p | ab
model.pLike_sequence = p, ab
model.pLike_sequenceOptional = p?, ab?
model.pLike_sequenceOptionalRepeatable = p*, ab*
model.pLike_sequenceRepeatable = p+, ab+
model.stageLike = stage
model.stageLike_alternation = stage
model.stageLike_sequence = stage
model.stageLike_sequenceOptional = stage?
model.stageLike_sequenceOptionalRepeatable = stage*
model.stageLike_sequenceRepeatable = stage+
model.entryPart = notAllowed
model.global.edit = gap | addSpan | damageSpan | delSpan | space
model.divPart = model.lLike | model.pLike | lg | sp
model.persStateLike =
  persName
  | affiliation
  | age
  | education
  | faith
  | floruit
  | langKnowledge
  | nationality
  | occupation
  | residence
  | sex
  | socecStatus
  | state
  | trait
model.persEventLike = birth | death | event | listEvent
model.personLike = org | person | personGrp
model.personPart =
  model.biblLike | model.persStateLike | model.persEventLike | idno
model.placeNamePart =
  placeName | bloc | country | region | district | settlement | geogName
model.placeNamePart_alternation =
  placeName | bloc | country | region | district | settlement | geogName
model.placeNamePart_sequence =
  placeName, bloc, country, region, district, settlement, geogName
model.placeNamePart_sequenceOptional =
  placeName?,
  bloc?,
  country?,
  region?,
  district?,
  settlement?,
  geogName?
model.placeNamePart_sequenceOptionalRepeatable =
  placeName*,
  bloc*,
  country*,
  region*,
  district*,
  settlement*,
  geogName*
model.placeNamePart_sequenceRepeatable =
  placeName+,
  bloc+,
  country+,
  region+,
  district+,
  settlement+,
  geogName+
model.placeStateLike =
  model.placeNamePart
  | climate
  | location
  | population
  | state
  | terrain
  | trait
model.placeStateLike_alternation =
  model.placeNamePart_alternation
  | climate
  | location
  | population
  | state
  | terrain
  | trait
model.placeStateLike_sequence =
  model.placeNamePart_sequence,
  climate,
  location,
  population,
  state,
  terrain,
  trait
model.placeStateLike_sequenceOptional =
  model.placeNamePart_sequenceOptional?,
  climate?,
  location?,
  population?,
  state?,
  terrain?,
  trait?
model.placeStateLike_sequenceOptionalRepeatable =
  model.placeNamePart_sequenceOptionalRepeatable*,
  climate*,
  location*,
  population*,
  state*,
  terrain*,
  trait*
model.placeStateLike_sequenceRepeatable =
  model.placeNamePart_sequenceRepeatable+,
  climate+,
  location+,
  population+,
  state+,
  terrain+,
  trait+
model.placeEventLike = event
model.orgPart = listOrg | listPerson | listPlace
model.publicationStmtPart.agency = publisher | distributor | authority
model.publicationStmtPart.detail =
  address | date | pubPlace | idno | availability
model.availabilityPart = licence
model.certLike = notAllowed
model.descLike = desc
model.glossLike = gloss
model.quoteLike = quote | cit
model.quoteLike_alternation = quote | cit
model.quoteLike_sequence = quote, cit
model.quoteLike_sequenceOptional = quote?, cit?
model.quoteLike_sequenceOptionalRepeatable = quote*, cit*
model.quoteLike_sequenceRepeatable = quote+, cit+
model.qLike = model.quoteLike | said | q
model.qLike_alternation = model.quoteLike_alternation | said | q
model.qLike_sequence = model.quoteLike_sequence, said, q
model.qLike_sequenceOptional =
  model.quoteLike_sequenceOptional?, said?, q?
model.qLike_sequenceOptionalRepeatable =
  model.quoteLike_sequenceOptionalRepeatable*, said*, q*
model.qLike_sequenceRepeatable =
  model.quoteLike_sequenceRepeatable+, said+, q+
model.respLike =
  author | editor | respStmt | meeting | sponsor | funder | principal
model.divWrapper =
  meeting
  | byline
  | dateline
  | argument
  | epigraph
  | salute
  | docAuthor
  | docDate
model.divTopPart = model.headLike | opener | signed
model.divTop = model.divWrapper | model.divTopPart
model.pLike.front =
  head
  | byline
  | argument
  | epigraph
  | docTitle
  | titlePart
  | docAuthor
  | docEdition
  | docImprint
  | docDate
model.divBottomPart = trailer | closer | signed | postscript
model.divBottom = model.divWrapper | model.divBottomPart
model.titlepagePart =
  graphic
  | binaryObject
  | byline
  | argument
  | epigraph
  | docTitle
  | titlePart
  | docAuthor
  | imprimatur
  | docEdition
  | docImprint
  | docDate
model.msQuoteLike = title | colophon | explicit | finalRubric | rubric
model.msItemPart =
  model.biblLike
  | model.quoteLike
  | model.respLike
  | model.msQuoteLike
  | textLang
  | idno
  | filiation
  | msItem
  | msItemStruct
  | decoNote
model.choicePart =
  sic | corr | reg | orig | unclear | abbr | expan | seg | ex | am
model.imprintPart = publisher | biblScope | pubPlace | distributor
model.catDescPart = notAllowed
model.physDescPart_sequenceOptional =
  objectDesc?,
  handDesc?,
  typeDesc?,
  scriptDesc?,
  musicNotation?,
  decoDesc?,
  additions?,
  bindingDesc?,
  sealDesc?,
  accMat?
model.addressLike = email | address | affiliation
model.addressLike_alternation = email | address | affiliation
model.addressLike_sequence = email, address, affiliation
model.addressLike_sequenceOptional = email?, address?, affiliation?
model.addressLike_sequenceOptionalRepeatable =
  email*, address*, affiliation*
model.addressLike_sequenceRepeatable = email+, address+, affiliation+
model.nameLike =
  model.nameLike.agent
  | model.offsetLike
  | model.placeStateLike
  | rs
  | model.persNamePart
  | idno
model.nameLike_alternation =
  model.nameLike.agent_alternation
  | model.offsetLike_alternation
  | model.placeStateLike_alternation
  | rs
  | model.persNamePart_alternation
  | idno
model.nameLike_sequence =
  model.nameLike.agent_sequence,
  model.offsetLike_sequence,
  model.placeStateLike_sequence,
  rs,
  model.persNamePart_sequence,
  idno
model.nameLike_sequenceOptional =
  model.nameLike.agent_sequenceOptional?,
  model.offsetLike_sequenceOptional?,
  model.placeStateLike_sequenceOptional?,
  rs?,
  model.persNamePart_sequenceOptional?,
  idno?
model.nameLike_sequenceOptionalRepeatable =
  model.nameLike.agent_sequenceOptionalRepeatable*,
  model.offsetLike_sequenceOptionalRepeatable*,
  model.placeStateLike_sequenceOptionalRepeatable*,
  rs*,
  model.persNamePart_sequenceOptionalRepeatable*,
  idno*
model.nameLike_sequenceRepeatable =
  model.nameLike.agent_sequenceRepeatable+,
  model.offsetLike_sequenceRepeatable+,
  model.placeStateLike_sequenceRepeatable+,
  rs+,
  model.persNamePart_sequenceRepeatable+,
  idno+
model.global =
  model.global.meta
  | model.milestoneLike
  | model.noteLike
  | model.global.edit
  | metamark
model.biblPart =
  model.respLike
  | model.imprintPart
  | series
  | citedRange
  | bibl
  | relatedItem
  | textLang
  | listRelation
  | relationGrp
  | edition
  | extent
  | msIdentifier
model.frontPart = divGen | titlePage
model.addrPart = model.nameLike | addrLine | street | postCode | postBox
model.pPart.data =
  model.dateLike
  | model.measureLike
  | model.addressLike
  | model.nameLike
model.inter =
  model.egLike
  | model.biblLike
  | model.labelLike
  | model.listLike
  | model.stageLike
  | model.qLike
model.common = model.divPart | model.inter
model.phrase =
  model.segLike
  | model.highlighted
  | model.graphicLike
  | model.pPart.msdesc
  | model.pPart.edit
  | model.ptrLike
  | model.pPart.data
model.limitedPhrase =
  model.hiLike
  | model.emphLike
  | model.pPart.msdesc
  | model.pPart.editorial
  | model.ptrLike
  | model.pPart.data
model.divLike = \div | homer
model.divGenLike = divGen
model.div1Like = div1
model.div2Like = div2
model.div3Like = div3
model.div4Like = div4
model.div5Like = div5
model.div6Like = div6
model.div7Like = div7
model.applicationLike = application
model.teiHeaderPart = encodingDesc | profileDesc
model.sourceDescPart = notAllowed
model.encodingDescPart =
  projectDesc
  | samplingDecl
  | editorialDecl
  | tagsDecl
  | styleDefDecl
  | refsDecl
  | listPrefixDef
  | classDecl
  | geoDecl
  | appInfo
model.editorialDeclPart =
  correction
  | normalization
  | quotation
  | hyphenation
  | segmentation
  | stdVals
  | interpretation
model.profileDescPart =
  abstract
  | creation
  | langUsage
  | textClass
  | calendarDesc
  | handNotes
  | listTranspose
att.source.attributes = att.source.attribute.source
att.source.attribute.source =
  
  ## provides a pointer to the bibliographical source from which a quotation or citation is drawn.
  attribute source {
    list { data.pointer+ }
  }?
model.resourceLike = facsimile | sourceDoc
att.personal.attributes =
  att.naming.attributes,
  att.personal.attribute.full,
  att.personal.attribute.sort
att.personal.attribute.full =
  
  ## indique si la composante du nom est donnée en intégralité, sous forme d'abréviation ou simplement d'initiale.
  [ a:defaultValue = "yes" ]
  attribute full {
    
    ## (complet) la composante du nom est orthographiée en intégralité.
    "yes"
    | 
      ## (abrégé) la composante du nom est donnée sous forme abrégée.
      "abb"
    | 
      ## (initiale) la composante du nom n'est indiquée que par sa lettre initiale.
      "init"
  }?
att.personal.attribute.sort =
  
  ## (ordre) précise dans quel ordre est placé la composante par rapport aux autres dans le nom d'une personne.
  attribute sort { data.count }?
model.placeLike = place
att.milestoneUnit.attributes = att.milestoneUnit.attribute.unit
att.milestoneUnit.attribute.unit =
  
  ## fournit un nom conventionnel pour le type de section qui change à partir de cette balise de bornage
  ## Suggested values include: 1] page; 2] column; 3] line; 4] book; 5] poem; 6] canto; 7] speaker; 8] stanza; 9] act; 10] scene; 11] section; 12] absent; 13] unnumbered
  attribute unit {
    
    ## sauts de page matériels (synonymes de l'élément pb)
    "page"
    | 
      ## sauts de colonnes
      "column"
    | 
      ## sauts de ligne (synonymes de l'élémentlb)
      "line"
    | 
      ## n'importe quel unité désignée par les termes livre, liber, etc.
      "book"
    | 
      ## poèmes séparés dans une collection
      "poem"
    | 
      ## chants ou autres parties principales dans une poésie
      "canto"
    | 
      ## changement de locuteur ou de narrateur
      "speaker"
    | 
      ## strophes dans une poésie, livre, ou chant
      "stanza"
    | 
      ## actes dans une pièce
      "act"
    | 
      ## scènes dans une pièce ou dans un acte
      "scene"
    | 
      ## parties de toute catégorie.
      "section"
    | 
      ## passages qui ne sont pas présents dans l'édition de référence.
      "absent"
    | 
      ## passages figurant dans le texte, mais qui ne sont pas destinés à être inclus comme élément de référence.
      "unnumbered"
    | xsd:Name
  }
p =
  
  ## (paragraphe) marque les paragraphes dans un texte en prose. [3.1.  7.2.5. ]
  element p {
    macro.paraContent,
    element * {
      attribute * { text }*
    }*,
    att.global.attributes,
    att.declaring.attributes,
    att.fragmentable.attributes,
    empty
  }
foreign =
  
  ## (étranger) reconnaît un mot ou une expression comme appartenant à une langue différente de celle du contexte. [3.3.2.1. ]
  element foreign { macro.phraseSeq, att.global.attributes, empty }
emph =
  
  ## (mis en valeur) marque des mots ou des expressions qui sont accentués ou mis en valeur pour un motif linguistique ou rhétorique. [3.3.2.2.  3.3.2. ]
  element emph { macro.paraContent, att.global.attributes, empty }
hi =
  
  ## (mis en évidence) distingue un mot ou une expression comme graphiquement distincte du texte environnant, sans en donner la raison. [3.3.2.2.  3.3.2. ]
  element hi {
    macro.paraContent,
    att.global.attribute.xmlid,
    att.global.attribute.rend,
    att.global.attribute.style,
    att.global.attribute.rendition,
    att.global.attribute.xmlbase,
    att.global.attribute.xmlspace,
    att.global.linking.attribute.synch,
    att.global.linking.attribute.sameAs,
    att.global.linking.attribute.copyOf,
    att.global.linking.attribute.next,
    att.global.linking.attribute.prev,
    att.global.linking.attribute.exclude,
    att.global.linking.attribute.select,
    att.global.change.attribute.change,
    empty
  }
distinct =
  
  ## identifie tout mot ou toute expression en la considérérant comme linguistiquement spécifique, par exemple comme étant archaïque, technique, dialectale, inusitée, ou comme appartenant à une langue spécifique. [3.3.2.3. ]
  element distinct {
    macro.phraseSeq,
    att.global.attributes,
    
    ## précise la variété de langue ou le registre de langue auquels appartiennent le mot ou l'expression.
    attribute type { data.enumerated }?,
    
    ## précise comment l'expression est diachroniquement distincte.
    attribute time { data.text }?,
    
    ## précise comment l'expression se caractérise de façon diatopique.
    attribute space { data.text }?,
    
    ## précise comment l'expression se caractérise de façon diastatique.
    attribute social { data.text }?,
    empty
  }
said =
  
  ## (Parole ou pensée.) indique que les passages sont pensés ou qu'ils sont prononcés à haute voix, que cela soit indiqué explicitement ou non dans la source , que ces passages soient directement ou indirectement rapportés par des personnages réels ou fictifs. [3.3.3. ]
  element said {
    macro.specialPara,
    att.global.attributes,
    att.ascribed.attributes,
    
    ## peut être utilisé pour indiquer si l'on estime que l'objet cité est dit oralement ou par signes.
    [ a:defaultValue = "unknown" ]
    attribute aloud { data.xTruthValue }?,
    
    ## peut être utilisé pour indiquer si le sujet cité est à considérer comme comme étant du discours direct ou du discours indirect.
    [ a:defaultValue = "true" ] attribute direct { data.xTruthValue }?,
    empty
  }
quote =
  
  ## (citation) contient une expression ou un passage que le narrateur ou l'auteur attribue à une origine extérieure au texte. [3.3.3.  4.3.1. ]
  element quote {
    macro.specialPara,
    att.global.attributes,
    att.typed.attributes,
    att.msExcerpt.attributes,
    att.source.attributes,
    empty
  }
q =
  
  ## (séparé du texte environnant par des guillemets) contient un fragment qui est marqué (visiblement) comme étant d’une manière ou d'une autre différent du texte environnant, pour diverses raisons telles que, par exemple, un discours direct ou une pensée, des termes techniques ou du jargon, une mise à distance par rapport à l’auteur, des citations empruntées et des passages qui sont mentionnés mais non employés. [3.3.3. ]
  element q {
    macro.specialPara,
    att.global.attributes,
    att.ascribed.attributes,
    att.source.attributes,
    
    ## peut être utilisé pour indiquer si le passage cité correspond à une parole ou à une pensée ou encore pour le caractériser plus finement.
    ## Suggested values include: 1] spoken; 2] thought; 3] written; 4] soCalled; 5] foreign; 6] distinct; 7] term; 8] emph; 9] mentioned
    attribute type {
      
      ## notation du discours direct
      "spoken"
      | 
        ## représentation de la pensée, par exemple un monologue intérieur.
        "thought"
      | 
        ## citation d'une source écrite
        "written"
      | 
        ## distance prise par rapport à l'auteur
        "soCalled"
      | 
        ## mots étrangers
        "foreign"
      | 
        ## linguistiquement distinct
        "distinct"
      | 
        ## terme technique
        "term"
      | 
        ## mis en valeur par un procédé rhétorique.
        "emph"
      | 
        ## métalinguistic, i.e. faisant référence à lui-même et non à son référent habituel.
        "mentioned"
      | xsd:Name
    }?,
    empty
  }
cit =
  
  ## (citation) citation provenant d'un autre document comprenant la référence bibliographique de sa source. Dans un dictionnaire il peut contenir un exemple avec au moins une occurrence du mot employé dans l’acception qui est décrite, ou une traduction du mot-clé, ou un exemple. [3.3.3.  4.3.1.  9.3.5.1. ]
  element cit {
    (model.qLike
     | model.egLike
     | model.biblLike
     | model.ptrLike
     | model.global
     | model.entryPart)+,
    att.global.attributes,
    att.typed.attributes,
    empty
  }
mentioned =
  
  ## marque des mots ou des expressions employés métalinguistiquement [3.3.3. ]
  element mentioned { macro.phraseSeq, att.global.attributes, empty }
soCalled =
  
  ## contient une expression ou un mot pour lesquels l'auteur ou le narrateur renonce à toute responsabilité, par exemple en utilisant de l'italique ou des guillemets. [3.3.3. ]
  element soCalled { macro.phraseSeq, att.global.attributes, empty }
desc =
  
  ## (description) contient une courte description de l'objet documenté par son élément parent, qui comprend son utilisation prévue, son but, ou son application là où c'est approprié. [22.4.1. ]
  element desc {
    macro.limitedContent,
    att.global.attributes,
    att.translatable.attributes,
    att.typed.attributes,
    empty
  }
gloss =
  
  ## (glose) identifie une expression ou un mot utilisé pour fournir une glose ou une définition à quelque autre mot ou expression. [3.3.4.  22.4.1. ]
  element gloss {
    macro.phraseSeq,
    att.global.attributes,
    att.declaring.attributes,
    att.translatable.attributes,
    att.typed.attributes,
    att.pointing.attributes,
    att.cReferencing.attributes,
    empty
  }
term =
  
  ## (terme) contient un mot simple, un mot composé ou un symbole, qui est considéré comme un terme technique. [3.3.4. ]
  element term {
    macro.phraseSeq,
    att.global.attributes,
    att.declaring.attributes,
    att.pointing.attributes,
    att.typed.attributes,
    att.canonical.attributes,
    att.sortable.attributes,
    att.cReferencing.attributes,
    empty
  }
sic =
  
  ## (du latin, ainsi
  ##    ) contient du texte reproduit quoiqu'il est apparemment incorrect ou inexact [3.4.1. ]
  element sic {
    macro.paraContent,
    att.global.attributes,
    att.responsibility.attributes,
    empty
  }
corr =
  
  ## (correction) contient la forme correcte d'un passage qui est considéré erroné dans la copie du texte. [3.4.1. ]
  element corr {
    macro.paraContent,
    att.global.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    empty
  }
choice =
  
  ## (choix) regroupe un certain nombre de balisages alternatifs possibles pour un même endroit dans un texte. [3.4. ]
  element choice {
    (model.choicePart | choice)*, att.global.attributes, empty
  }
reg =
  
  ## (régularisation) contient une partie qui a été régularisée ou normalisée de façon quelconque [3.4.2.  12. ]
  element reg {
    macro.paraContent,
    att.global.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    empty
  }
orig =
  
  ## (forme originale) contient une partie notée comme étant fidèle à l'original et non pas normalisée ou corrigée. [3.4.2.  12. ]
  element orig {
    macro.paraContent,
    att.global.attributes,
    att.responsibility.attributes,
    empty
  }
gap =
  
  ## (omission) indique une omission dans une transcription, soit pour des raisons éditoriales décrites dans l'en-tête TEI au cours d’un échantillonnage, soit parce que le matériau est illisible ou inaudible. [3.4.3. ]
  element gap {
    (model.descLike | model.certLike)*,
    att.global.attributes,
    att.editLike.attributes,
    
    ## donne la raison de l'omission. Les valeurs d'échantillon comprennent échantillonnage, illisible, inaudible, non pertinent, biffé, biffé et illisible.
    attribute reason {
      list { data.word+ }
    }?,
    
    ## lorsque du texte est omis de la transcription en raison d'une suppression volontaire par une main identifiable, indique quelle est cette main.
    attribute hand { data.pointer }?,
    
    ## lorsque du texte est omis de la transcription en raison d'un dommage, catégorise la cause du dommage, si celle-ci peut être identifiée.
    ## Sample values include: 1] rubbing; 2] mildew; 3] smoke
    attribute agent { data.enumerated }?,
    empty
  }
add =
  
  ## ( ajout) contient des lettres, des mots ou des phrases insérés dans le texte par un auteur, un copiste, un annotateur ou un correcteur. [3.4.3. ]
  element add {
    macro.paraContent,
    att.global.attributes,
    att.transcriptional.attributes,
    att.placement.attributes,
    att.typed.attributes,
    empty
  }
del =
  
  ## (suppression) contient une lettre, un mot ou un passage supprimé, marqué comme supprimé, sinon indiqué comme superflu ou erroné dans le texte par un auteur, un copiste, un annotateur ou un correcteur. [3.4.3. ]
  element del {
    macro.paraContent,
    att.global.attributes,
    att.transcriptional.attributes,
    att.typed.attributes,
    empty
  }
unclear =
  
  ## (incertain) contient un mot, une expression ou bien un passage qui ne peut être transcrit avec certitude parce qu'il est illisible ou inaudible dans la source. [11.3.3.1.  3.4.3. ]
  element unclear {
    macro.paraContent,
    att.global.attributes,
    att.editLike.attributes,
    
    ## indique pourquoi il est difficile de transcrire le document
    attribute reason {
      list { data.word+ }
    }?,
    
    ## lorsque la difficulté de transcription vient d'une action attribuable à une main identifiable (suppression partielle, etc.), indique quelle est cette main
    attribute hand { data.pointer }?,
    
    ## lorsque la difficulté de transcription vient d'un dommage, catégorise la cause du dommage si celle-ci peut être identifiée
    ## Sample values include: 1] rubbing; 2] mildew; 3] smoke
    attribute agent { data.enumerated }?,
    empty
  }
name =
  
  ## (nom, nom propre) contient un nom propre ou un syntagme nominal. [3.5.1. ]
  element name {
    macro.phraseSeq,
    att.global.attributes,
    att.personal.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    empty
  }
rs =
  
  ## (chaîne de référence) contient un nom générique ou une chaîne permettant de s'y référer. [13.2.1.  3.5.1. ]
  element rs {
    macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    empty
  }
email =
  
  ## (adresse de courrier électronique) contient l'adresse de courriel identifiant un emplacement où un courriel peut être envoyé. [3.5.2. ]
  element email { macro.phraseSeq, att.global.attributes, empty }
address =
  
  ## contient une adresse postale ou d'un autre type, par exemple l'adresse d'un éditeur, d'un organisme ou d'une personne. [3.5.2.  2.2.4.  3.11.2.4. ]
  element address {
    (model.global*, (model.addrPart, model.global*)+),
    att.global.attributes,
    empty
  }
addrLine =
  
  ## (ligne d'adresse) contient une ligne d'adresse postale. [3.5.2.  2.2.4.  3.11.2.4. ]
  element addrLine { macro.phraseSeq, att.global.attributes, empty }
street =
  
  ## adresse complète d'une rue comprenant un nom ou un numéro identifiant un bâtiment ainsi que le nom de la rue ou du chemin sur laquelle il est situé. [3.5.2. ]
  element street { macro.phraseSeq, att.global.attributes, empty }
postCode =
  
  ## (code postal) contient un code numérique ou alphanumérique qui fait partie de l'adresse postale et sert à simplifier le tri ou la distribution du courrier. [3.5.2. ]
  element postCode { text, att.global.attributes, empty }
postBox =
  
  ## (boîte postale) contient un numéro ou un autre identifiant d'un lieu de distribution du courrier autre qu'un nom de rue. [3.5.2. ]
  element postBox { text, att.global.attributes, empty }
num =
  
  ## (numéral) contient un nombre écrit sous une forme quelconque. [3.5.3. ]
  element num {
    macro.phraseSeq,
    att.global.attributes,
    att.ranging.attributes,
    
    ## indique le type de valeur numérique
    ## Suggested values include: 1] cardinal; 2] ordinal; 3] fraction; 4] percentage
    attribute type {
      
      ## nombre entier ou décimal, par exemple 21, 21.5
      "cardinal"
      | 
        ## nombre ordinal, par exemple 21ème
        "ordinal"
      | 
        ## fraction, par exemple une moitié ou trois-quarts
        "fraction"
      | 
        ## un pourcentage
        "percentage"
      | xsd:Name
    }?,
    
    ## fournit la valeur d'un nombre sous une forme normalisée.
    attribute value { data.numeric }?,
    empty
  }
measure =
  
  ## (mesure) contient un mot ou une expression faisant référence à la quantité d'un objet ou d'un produit, comprenant en général un nombre, une unité et le nom d'un produit. [3.5.3. ]
  element measure {
    macro.phraseSeq,
    att.global.attributes,
    att.measurement.attributes,
    
    ## précise le type de mesure exprimée dans la typologie adaptée.
    attribute type { data.enumerated }?,
    empty
  }
measureGrp =
  
  ## (groupe de mesures) contient un groupe de spécifications des dimensions qui concernent un même objet, par exemple la hauteur et la largeur d'une page d'un manuscrit. [10.3.4. ]
  element measureGrp {
    (text | model.gLike | model.measureLike)*,
    att.global.attributes,
    att.measurement.attributes,
    att.typed.attributes,
    empty
  }
date =
  
  ## (date) contient une date exprimée dans n'importe quel format. [3.5.4.  2.2.4.  2.5.  3.11.2.4.  15.2.3.  13.3.6. ]
  element date {
    (text | model.gLike | model.phrase | model.global)*,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    empty
  }
time =
  
  ## (temps) contient une expression qui précise un moment de la journée sous n'importe quelle forme. [3.5.4. ]
  element time {
    (text | model.gLike | model.phrase | model.global)*,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    empty
  }
abbr =
  
  ## (abréviation) contient une abréviation quelconque. [3.5.5. ]
  element abbr {
    macro.phraseSeq,
    att.global.attributes,
    att.responsibility.attributes,
    att.typed.attribute.subtype,
    
    ##
    attribute type {
      
      ##  
      "CHECK-THIS-OUT"
      | 
        ##  
        "MY-PARENT-SHOULD-HAVE-ONLY-1-DECL-OF-TYPE"
    },
    empty
  }
expan =
  
  ## (expansion) contient l'expansion d'une abréviation. [3.5.5. ]
  element expan {
    macro.phraseSeq,
    att.global.attributes,
    att.editLike.attributes,
    empty
  }
ptr =
  
  ## (pointeur) définit un pointeur vers un autre emplacement. [3.6.  16.1. ]
  element ptr {
    empty
    >> sch:pattern [
         id = "test21-ptr-ptrAtts-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ptr"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the\x{a}" ~
             "attributes @target and @cRef may be supplied on "
             sch:name [ ]
             "."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.pointing.attributes,
    att.internetMedia.attributes,
    att.typed.attribute.subtype,
    att.declaring.attributes,
    att.cReferencing.attributes,
    
    ## caractérise l'élément en utilisant n'importe quel système ou typologie de classification approprié.
    attribute type {
      
      ## first type
      "A"
      | 
        ## second type
        "B"
    },
    empty
  }
ref =
  
  ## (référence) définit une référence vers un autre emplacement, la référence étant éventuellement modifiée ou complétée par un texte ou un commentaire. [3.6.  16.1. ]
  element ref {
    macro.paraContent
    >> sch:pattern [
         id = "test21-ref-refAtts-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ref"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the\x{a}" ~
             "	attributes @target' and @cRef' may be supplied on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.pointing.attributes,
    att.internetMedia.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    att.cReferencing.attributes,
    empty
  }
\list =
  
  ## (liste) contient une suite d'items ordonnés dans une liste. [3.7. ]
  element list {
    ((model.divTop | model.global)*,
     ((item, model.global*)+
      | (headLabel?,
         headItem?,
         (label, model.global*, item, model.global*)+)),
     (model.divBottom, model.global*)*),
    att.global.attributes,
    att.sortable.attributes,
    
    ## décrit la forme de la liste.
    ## Suggested values include: 1] ordered; 2] bulleted; 3] simple; 4] gloss
    [ a:defaultValue = "simple" ]
    attribute type {
      
      ## le classement des items de la liste est alphanumérique
      "ordered"
      | 
        ## les items de la liste sont marqués par une puce ou avec un autre signe typographique.
        "bulleted"
      | 
        ## les items de la liste ne sont pas numérotés ni précédés d'une puce.
        "simple"
      | 
        ## chaque item de la liste commente un terme ou un concept qui est donné par un élément label précédant l'item de la liste.
        "gloss"
      | xsd:Name
    }?,
    empty
  }
item =
  
  ## contient un composant d'une liste. [3.7.  2.5. ]
  element item {
    macro.specialPara,
    att.global.attributes,
    att.sortable.attributes,
    empty
  }
label =
  
  ## (étiquette) contient l'étiquette attachée à un item dans une liste ; dans les glossaires, il marque le terme qui est défini. [3.7. ]
  element label {
    macro.phraseSeq,
    att.global.attributes,
    att.typed.attributes,
    att.placement.attributes,
    empty
  }
head =
  
  ## (en-tête) contient tout type d'en-tête, par exemple le titre d'une section, ou l'intitulé d'une liste, d'un glossaire, d'une description de manuscrit, etc. [4.2.1. ]
  element head {
    (text
     | lg
     | model.gLike
     | model.phrase
     | model.inter
     | model.lLike
     | model.global)*,
    att.global.attributes,
    att.typed.attributes,
    empty
  }
headLabel =
  
  ## (intitulé d'une liste d'étiquettes) contient l'intitulé pour la colonne d'étiquettes ou de termes dans un glossaire ou dans une liste structurée de la même manière. [3.7. ]
  element headLabel { macro.phraseSeq, att.global.attributes, empty }
headItem =
  
  ## (intitulé d'une liste d'items ) contient l'intitulé pour la colonne d'items ou de gloses dans un glossaire ou dans une liste semblablement structurée. [3.7. ]
  element headItem { macro.phraseSeq, att.global.attributes, empty }
note =
  
  ## contient une note ou une annotation [3.8.1.  2.2.6.  3.11.2.8.  9.3.5.4. ]
  element note {
    macro.specialPara,
    att.global.attributes,
    att.placement.attributes,
    att.pointing.attributes,
    att.responsibility.attributes,
    att.typed.attributes,
    
    ## indique si l'exemplaire du texte montre l'emplacement de référence exact pour la note
    [ a:defaultValue = "true" ] attribute anchored { data.truthValue }?,
    
    ## pointe vers la fin d'un passage auquel la note est attachée, si la note n'est pas enchâssée dans le texte à cet endroit
    attribute targetEnd {
      list { data.pointer+ }
    }?,
    empty
  }
index =
  
  ## (entrée d'index) marque un emplacement à indexer dans un but quelconque. [3.8.2. ]
  element index {
    (term, index?)*,
    att.global.attributes,
    att.spanning.attributes,
    
    ## donne un nom pour préciser à quel index (parmi plusieurs) appartient l'entrée d'index.
    attribute indexName { data.name }?,
    empty
  }
media =
  
  ## indicates the location of any form of external media such as an audio or video clip etc. [3.9. ]
  element media {
    model.descLike*,
    att.typed.attributes,
    att.global.attributes,
    att.media.attribute.width,
    att.media.attribute.height,
    att.media.attribute.scale,
    att.resourced.attributes,
    att.declaring.attributes,
    att.timed.attributes,
    
    ## (type de média MIME) spécifie le type MIME (multipurpose internet mail extension) applicable.
    attribute mimeType {
      list { data.word+ }
    },
    empty
  }
graphic =
  
  ## indique l'emplacement d'une image, d'une illustration ou d'un schéma intégrés. [3.9. ]
  element graphic {
    model.descLike*,
    att.global.attributes,
    att.media.attributes,
    att.resourced.attributes,
    att.declaring.attributes,
    empty
  }
binaryObject =
  
  ## fournit des données binaires encodées qui représentent une image ou un autre objet insérés dans le texte ou dans un autre objet. [3.9. ]
  element binaryObject {
    text,
    att.global.attributes,
    att.media.attributes,
    att.timed.attributes,
    att.typed.attributes,
    
    ## l'encodage utilisé pour encoder les données binaires. Sans autre spécification il est supposé s'agir de Base64.
    attribute encoding {
      list { data.word+ }
    }?,
    empty
  }
milestone =
  
  ## (borne) marque un point permettant de délimiter les sections d'un texte selon un autre systeme que les éléments de structure ; une balise de ce type marque une frontière. [3.10.3. ]
  element milestone {
    empty,
    att.global.attributes,
    att.milestoneUnit.attributes,
    att.typed.attributes,
    att.edition.attributes,
    att.spanning.attributes,
    att.breaking.attributes,
    empty
  }
gb =
  
  ## (gathering begins) marks the point in a transcribed codex at which a new gathering or quire begins. [3.10.3. ]
  element gb {
    empty,
    att.global.attributes,
    att.typed.attributes,
    att.spanning.attributes,
    att.breaking.attributes,
    empty
  }
pb =
  
  ## (saut de page) marque le début d'une page de texte dans un document paginé. [3.10.3. ]
  element pb {
    empty,
    att.global.attributes,
    att.typed.attributes,
    att.edition.attributes,
    att.spanning.attributes,
    att.breaking.attributes,
    empty
  }
lb =
  
  ## (saut de ligne) marque le début d'une nouvelle ligne (typographique) dans une édition ou dans une version d'un texte. [3.10.3.  7.2.5. ]
  element lb {
    empty,
    att.global.attributes,
    att.typed.attributes,
    att.edition.attributes,
    att.spanning.attributes,
    att.breaking.attributes,
    empty
  }
cb =
  
  ## (saut de colonne) marque le début d'une nouvelle colonne de texte sur une page multi-colonne. [3.10.3. ]
  element cb {
    empty,
    att.global.attributes,
    att.typed.attributes,
    att.edition.attributes,
    att.spanning.attributes,
    att.breaking.attributes,
    empty
  }
analytic =
  
  ## (niveau analytique) contient des éléments descriptifs qui décrivent la bibliographie d'une ressource (par exemple un poème ou un article de revue) publiée à l'intérieur d'une monographie ou d'une ressource et non publiée de façon indépendante. [3.11.2.1. ]
  element analytic {
    (author
     | editor
     | respStmt
     | title
     | model.ptrLike
     | date
     | textLang
     | idno)*,
    att.global.attributes,
    empty
  }
monogr =
  
  ## (niveau monographique) contient des données bibliographiques décrivant un objet (par exemple une monographie ou une revue) publié comme un élément indépendant (i.e. matériellement séparé. [3.11.2.1. ]
  element monogr {
    ((((author | editor | meeting | respStmt),
       (author | editor | meeting | respStmt)*,
       title+,
       (model.ptrLike | idno | textLang | editor | respStmt)*)
      | ((title | model.ptrLike | idno)+,
         (textLang | author | editor | meeting | respStmt)*)
      | (authority, idno))?,
     model.noteLike*,
     (edition,
      (idno | model.ptrLike | editor | sponsor | funder | respStmt)*)*,
     imprint,
     (imprint | extent | biblScope)*),
    att.global.attributes,
    empty
  }
series =
  
  ## (informations sur la série) contient une information sur la série dans laquelle une monographie ou un autre élément bibliographique ont paru. [3.11.2.1. ]
  element series {
    (text
     | model.gLike
     | title
     | model.ptrLike
     | editor
     | respStmt
     | biblScope
     | idno
     | textLang
     | model.global)*,
    att.global.attributes,
    empty
  }
author =
  
  ## (auteur) dans une référence bibliographique contient le nom de la (des) personne(s) physique(s) ou du collectif, auteur(s) d'une oeuvre ; par exemple dans la même forme que celle utilisée par une référence bibliographique reconnue. [3.11.2.2.  2.2.1. ]
  element author {
    macro.phraseSeq,
    att.global.attributes,
    att.naming.attribute.altname,
    att.naming.attribute.nymRef,
    att.canonical.attribute.key,
    att.canonical.attribute.ref,
    empty
  }
editor =
  
  ## mention de responsabilité secondaire pour un item bibliographique, par exemple le nom d'une personne, d'une institution ou d'un organisme (ou de plusieurs d'entre eux) comme éditeur scientifique, compilateur, traducteur, etc. [3.11.2.2. ]
  element editor {
    macro.phraseSeq,
    att.global.attributes,
    att.naming.attribute.altname,
    att.naming.attribute.nymRef,
    att.canonical.attribute.key,
    att.canonical.attribute.ref,
    
    ## may be used to specify further information about the entity referenced by this name, for example the occupation of a person, or the status of a place.
    attribute role {
      
      ##
      "them"
      | 
        ##
        "us"
    }?,
    empty
  }
respStmt =
  
  ## (mention de responsabilité) indique la responsabilité quant au contenu intellectuel d'un texte, d'une édition, d'un enregistrement ou d'une publication en série, lorsque les éléments spécifiques relatifs aux auteurs, éditeurs, etc. ne suffisent pas ou ne s'appliquent pas. [3.11.2.2.  2.2.1.  2.2.2.  2.2.5. ]
  element respStmt {
    ((resp+, model.nameLike.agent+) | (model.nameLike.agent+, resp+)),
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
resp =
  
  ## (responsabilité) contient une expression décrivant la nature de la responsabilité intellectuelle d'une personne. [3.11.2.2.  2.2.1.  2.2.2.  2.2.5. ]
  element resp {
    macro.phraseSeq.limited,
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
title =
  
  ## (titre) contient le titre complet d'une oeuvre quelconque [3.11.2.2.  2.2.1.  2.2.5. ]
  element title {
    (text | hi)*,
    att.global.attribute.xmlid,
    att.global.attribute.xmllang,
    att.canonical.attributes,
    
    ## indique le niveau bibliographique d'un titre, c'est-à-dire si ce titre identifie un article, un livre, une revue, une collection, ou un document non publié
    attribute level {
      
      ## (analytique) titre analytique (article, poème ou autre, publié comme partie d'un ensemble plus grand)
      "a"
      | 
        ## (monographique) titre de monographie (livre, ensemble ou autre, publié comme un document distinct, y compris les volumes isolés d'ouvrages en plusieurs volumes)
        "m"
      | 
        ## (journal) titre de revue
        "j"
      | 
        ## (série) titre de publication en série
        "s"
      | 
        ## (unpublished) titre de matéria non publié (thèses et dissertations comprises, à l'exception de leurs éditions commerciales)
        "u"
    }?,
    empty
  }
meeting =
  
  ## contient le titre descriptif formalisé d’une réunion ou d’une conférence, employé dans une description bibliographique pour un article provenant d'une telle réunion, ou comme le titre ou le préambule aux publications qui en émanent. [3.11.2.2. ]
  element meeting {
    macro.limitedContent,
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
imprint =
  
  ## regroupe des informations relatives à la publication ou à la distribution d'un élément bibliographique. [3.11.2.4. ]
  element imprint {
    ((classCode | catRef)*,
     ((model.imprintPart | model.dateLike), respStmt*, model.global*)+),
    att.global.attributes,
    empty
  }
publisher =
  
  ## (éditeur) donne le nom de l'organisme responsable de la publication ou de la distribution d'un élément de la bibliographie. [3.11.2.4.  2.2.4. ]
  element publisher { macro.phraseSeq, att.global.attributes, empty }
biblScope =
  
  ## (extension d'une référence bibliographique) définit l'extension d'une référence bibliographique, comme par exemple une liste de numéros de page, ou le nom d'une subdivision d'une oeuvre plus grande. [3.11.2.4. ]
  element biblScope {
    macro.phraseSeq,
    att.global.attributes,
    att.citing.attributes,
    
    ## identifie le type d'information que transmet l'élément, par exemple colonnes, pages, volume, etc.
    ## Suggested values include: 1] vol(volume) ; 2] issue; 3] pp(pages) ; 4] ll(lines) ; 5] chap(chapter) ; 6] part
    attribute type {
      
      ## ( volume) l'élément contient un numéro de volume.
      "vol"
      | 
        ## l'élément contient un numéro de livraison ou bien un numéro de volume et de livraison.
        "issue"
      | 
        ## ( pages) l'élément contient un nombre de pages ou l'étendue de sélection des pages.
        "pp"
      | 
        ## (lines) the element contains a line number or line range.
        "ll"
      | 
        ## ((chapitre)) l'élément contient une indication de chapitre (le numéro et/ou le titre)
        "chap"
      | 
        ## l'élément identifie une partie d'un livre ou une anthologie.
        "part"
      | xsd:Name
    }?,
    empty
  }
citedRange =
  
  ## (cited range) defines the range of cited content, often represented by pages or other units [3.11.2.4. ]
  element citedRange {
    macro.phraseSeq,
    att.global.attributes,
    att.pointing.attributes,
    att.citing.attributes,
    empty
  }
pubPlace =
  
  ## (lieu de publication) contient le nom du lieu d'une publication. [3.11.2.4. ]
  element pubPlace {
    macro.phraseSeq, att.global.attributes, att.naming.attributes, empty
  }
bibl =
  
  ## (référence bibliographique.) contient une référence bibliographique faiblement structurée dans laquelle les sous-composants peuvent ou non être explicitement balisés. [3.11.1.  2.2.7.  15.3.2. ]
  element bibl {
    (text
     | model.gLike
     | model.highlighted
     | model.pPart.data
     | model.pPart.edit
     | model.segLike
     | model.ptrLike
     | model.biblPart
     | model.global)*,
    att.global.attributes,
    att.declarable.attributes,
    att.typed.attributes,
    att.sortable.attributes,
    att.docStatus.attributes,
    empty
  }
biblStruct =
  
  ## (référence bibliographique structurée) contient une référence bibliographique dans laquelle seuls des sous-éléments bibliographiques apparaissent et cela, selon un ordre déterminé. [3.11.1.  2.2.7.  15.3.2. ]
  element biblStruct {
    (analytic*,
     (monogr, series*)+,
     (model.noteLike
      | idno
      | model.ptrLike
      | relatedItem
      | citedRange)*),
    att.global.attributes,
    att.declarable.attributes,
    att.typed.attributes,
    att.sortable.attributes,
    att.docStatus.attributes,
    empty
  }
listBibl =
  
  ## (liste de références bibliographiques) contient une liste de références bibliographiques de toute nature. [3.11.1.  2.2.7.  15.3.2. ]
  element listBibl {
    (model.headLike*, (model.biblLike | model.milestoneLike)+),
    att.global.attributes,
    att.sortable.attributes,
    att.declarable.attributes,
    att.typed.attributes,
    empty
  }
relatedItem =
  
  ## contient ou référe à un autre élément bibliographique ayant une relation quelconque avec l'objet décrit, par exemple comme faisant partie d'une version alternative de celui-ci, ou bien en étant une version alternative. [3.11.2.7. ]
  element relatedItem {
    ((model.biblLike | model.ptrLike)?)
    >> sch:pattern [
         id = "test21-relatedItem-targetorcontent1-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:relatedItem"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and count( child::* ) > 0"
             "\x{a}" ~
             "If the @target attribute on "
             sch:name [ ]
             " is used, the\x{a}" ~
             "relatedItem element must be empty"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "test21-relatedItem-targetorcontent1-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:relatedItem"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@target or child::*"
             "A relatedItem element should have either a 'target' attribute\x{a}" ~
             "        or a child element to indicate the related bibliographic item"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.typed.attributes,
    
    ## points to the related bibliographic element by means of an absolute or relative URI reference
    attribute target { data.pointer }?,
    empty
  }
l =
  
  ## (vers) contient un seul vers, éventuellement incomplet. [3.12.1.  3.12.  7.2.5. ]
  element l {
    macro.paraContent,
    att.global.attributes,
    att.fragmentable.attributes,
    empty
  }
lg =
  
  ## (groupe de vers) contient un groupe de vers fonctionnant comme une unité formelle, par exemple une strophe, un refrain, un paragraphe en vers, etc. [3.12.1.  3.12.  7.2.5. ]
  element lg {
    ((model.divTop | model.global)*,
     (model.lLike | model.stageLike | model.labelLike | lg),
     (model.lLike
      | model.stageLike
      | model.labelLike
      | model.global
      | lg)*,
     (model.divBottom, model.global*)*)
    >> sch:pattern [
         id = "test21-lg-atleast1oflggapl-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:lg"
           "\x{a}" ~
           "               "
           sch:assert [
             test =
               "count(descendant::tei:lg|descendant::tei:l|descendant::tei:gap) > 0"
             "An lg element\x{a}" ~
             "        must contain at least one child l, lg or gap element."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.divLike.attributes,
    att.typed.attribute.subtype,
    att.declaring.attributes,
    
    ## caractérise l'élément en utilisant n'importe quel système ou typologie de classification approprié.
    [ a:defaultValue = "A" ]
    attribute type {
      
      ## first type
      "A"
      | 
        ## second type
        "B"
    }?,
    empty
  }
sp =
  
  ## (langue orale) monologue dans un texte écrit pour la scène ou un passage présenté sous cette forme dans un texte en prose ou en vers. [3.12.2.  3.12.  7.2.2. ]
  element sp {
    (model.global*,
     (speaker, model.global*)?,
     ((lg
       | model.lLike
       | model.pLike
       | model.listLike
       | model.stageLike
       | model.qLike),
      model.global*)+),
    att.global.attributes,
    att.ascribed.attributes,
    empty
  }
speaker =
  
  ## forme particulière de titre ou de marque qui donne le nom d'un ou de plusieurs locuteurs dans un texte ou dans un fragment de texte écrit pour le théâtre. [3.12.2. ]
  element speaker { macro.phraseSeq, att.global.attributes, empty }
stage =
  
  ## (indication scénique) contient tout type d'indication scénique à l'intérieur d'un texte ou fragment de texte écrit pour le théâtre. [3.12.2.  3.12.  7.2.4. ]
  element stage {
    macro.specialPara,
    att.ascribed.attributes,
    att.global.attributes,
    att.placement.attributes,
    
    ## indique le type d'indication scénique
    ## Suggested values include: 1] setting; 2] entrance; 3] exit; 4] business; 5] novelistic; 6] delivery; 7] modifier; 8] location; 9] mixed
    attribute type {
      
      ## décrit une mise en scène
      "setting"
      | 
        ## décrit une entrée
        "entrance"
      | 
        ## décrit une sortie
        "exit"
      | 
        ## décrit une action sur scène
        "business"
      | 
        ## texte explicatif de la direction de scène.
        "novelistic"
      | 
        ## décrit la façon dont parle un personnage
        "delivery"
      | 
        ## donne certains détails à propos d'un personnage
        "modifier"
      | 
        ## décrit un lieu
        "location"
      | 
        ## plusieurs des indications précédentes
        "mixed"
      | xsd:Name
    }?,
    empty
  }
teiCorpus =
  
  ## contient la totalité d'un corpus encodé selon la TEI, comprenant un seul en-tête de corpus et un ou plusieurs éléments TEI dont chacun contient un seul en-tête textuel et un texte. [4.  15.1. ]
  element teiCorpus {
    (teiHeader,
     ((model.resourceLike+, (TEI | teiCorpus)*)
      | (TEI | teiCorpus)+)),
    att.global.attributes,
    
    ## la version du modèle TEI
    [ a:defaultValue = "5.0" ] attribute version { data.version }?,
    empty
  }
divGen =
  
  ## (division de texte générée automatiquement) indique l'emplacement où doit apparaître une division du texte générée automatiquement par une application de traitement de texte. [3.8.2. ]
  element divGen {
    model.headLike*,
    att.global.attributes,
    
    ##
    attribute type {
      
      ## (Catalogue of Attributes) 
      "attcat"
      | 
        ## (Catalogue of Attribute Classes) 
        "attclasscat"
      | 
        ## ( Catalogue of Elements) 
        "elementcat"
      | 
        ## ( Catalogue of Macros) 
        "macrocat"
      | 
        ## (Catalogue of Model Classes) 
        "modelclasscat"
      | 
        ## (Table of Contents) 
        "toc"
    }?,
    empty
  }
textLang =
  
  ## (langues du texte) décrit les langues et systèmes d'écriture utilisés dans un manuscrit (et non dans la description du manuscrit, dont les langues et systèmes d'écriture sont décrits dans l'élément langUsage). [3.11.2.4.  10.6.6. ]
  element textLang {
    macro.phraseSeq,
    att.global.attributes,
    
    ## (langue principale) contient un code identifiant la langue principale du manuscrit.
    attribute mainLang { data.language }?,
    
    ## (autres langues) contient un ou plusieurs codes identifiant toute autre langue utilisée dans le manuscrit.
    attribute otherLangs {
      list { data.language* }
    }?,
    empty
  }
att.datable.custom.attributes =
  att.datable.custom.attribute.when-custom,
  att.datable.custom.attribute.notBefore-custom,
  att.datable.custom.attribute.notAfter-custom,
  att.datable.custom.attribute.from-custom,
  att.datable.custom.attribute.to-custom,
  att.datable.custom.attribute.datingPoint,
  att.datable.custom.attribute.datingMethod
att.datable.custom.attribute.when-custom =
  
  ## supplies the value of a date or time in some standard form.
  attribute when-custom {
    list { data.word+ }
  }?
att.datable.custom.attribute.notBefore-custom =
  
  ## specifies the earliest possible date for the event in some custom standard form.
  attribute notBefore-custom {
    list { data.word+ }
  }?
att.datable.custom.attribute.notAfter-custom =
  
  ## specifies the latest possible date for the event in some custom standard form.
  attribute notAfter-custom {
    list { data.word+ }
  }?
att.datable.custom.attribute.from-custom =
  
  ## indicates the starting point of the period in some standard form.
  attribute from-custom {
    list { data.word+ }
  }?
att.datable.custom.attribute.to-custom =
  
  ## indicates the ending point of the period in some standard form.
  attribute to-custom {
    list { data.word+ }
  }?
att.datable.custom.attribute.datingPoint =
  
  ## supplies a pointer to some location defining a named point in time with reference to which the datable item is understood to have occurred
  attribute datingPoint { data.pointer }?
att.datable.custom.attribute.datingMethod =
  
  ## supplies a pointer to a calendar element or other means of interpreting the values of the custom dating attributes.
  attribute datingMethod { data.pointer }?
model.persNamePart =
  surname | forename | genName | nameLink | addName | roleName
model.persNamePart_alternation =
  surname | forename | genName | nameLink | addName | roleName
model.persNamePart_sequence =
  surname, forename, genName, nameLink, addName, roleName
model.persNamePart_sequenceOptional =
  surname?, forename?, genName?, nameLink?, addName?, roleName?
model.persNamePart_sequenceOptionalRepeatable =
  surname*, forename*, genName*, nameLink*, addName*, roleName*
model.persNamePart_sequenceRepeatable =
  surname+, forename+, genName+, nameLink+, addName+, roleName+
att.datable.iso.attributes =
  att.datable.iso.attribute.when-iso,
  att.datable.iso.attribute.notBefore-iso,
  att.datable.iso.attribute.notAfter-iso,
  att.datable.iso.attribute.from-iso,
  att.datable.iso.attribute.to-iso
att.datable.iso.attribute.when-iso =
  
  ## précise une date exacte pour l'évènement selon la forme normalisée ISO 8601, c'est-à-dire aaaa-mm-jj.
  attribute when-iso { data.temporal.iso }?
att.datable.iso.attribute.notBefore-iso =
  
  ## précise la première date possible pour l'évènement selon la forme normalisée, c'est-à-dire aaaa-mm-jj.
  attribute notBefore-iso { data.temporal.iso }?
att.datable.iso.attribute.notAfter-iso =
  
  ## précise la dernière date possible pour l'évènement selon la forme normalisée, c'est-à-dire aaaa-mm-jj.
  attribute notAfter-iso { data.temporal.iso }?
att.datable.iso.attribute.from-iso =
  
  ## Indique le point de départ de la période sous une forme normalisée
  attribute from-iso { data.temporal.iso }?
att.datable.iso.attribute.to-iso =
  
  ## Indique le point final de la période sous une forme normalisée
  attribute to-iso { data.temporal.iso }?
orgName =
  
  ## (nom d'organisation) contient le nom d'une organisation. [13.2.2. ]
  element orgName {
    macro.phraseSeq,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
persName =
  
  ## (nom de personne) contient un nom propre ou une expression nominale se référant à une personne, pouvant inclure tout ou partie de ses prénoms, noms de famille, titres honorifiques, noms ajoutés, etc. [13.2.1. ]
  element persName {
    macro.phraseSeq,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
surname =
  
  ## (nom de famille) contient un nom de famille (hérité) par opposition à un nom donné, nom de baptême ou surnom. [13.2.1. ]
  element surname {
    macro.phraseSeq,
    att.global.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
forename =
  
  ## (prénom) contient un prénom, qu'il soit donné ou un nom de baptême. [13.2.1. ]
  element forename {
    macro.phraseSeq,
    att.global.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
genName =
  
  ## (qualificatif générationnel de nom) contient une composante de nom utilisée pour distinguer des noms, par ailleurs similaires, sur la base de l'âge ou de la génération des personnes concernées. [13.2.1. ]
  element genName {
    macro.phraseSeq,
    att.global.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
nameLink =
  
  ## (lien entre les composants d'un nom) contient une particule ou une expression exprimant un lien, utilisés dans un nom mais considérés comme n'en faisant pas partie, comme "van der" ou "de". [13.2.1. ]
  element nameLink {
    macro.phraseSeq, att.global.attributes, att.typed.attributes, empty
  }
addName =
  
  ## (nom additionnel) contient une composante de nom additionnelle, comme un surnom, une épithète, un alias ou toute autre expression descriptive utilisée dans un nom de personne. [13.2.1. ]
  element addName {
    macro.phraseSeq,
    att.global.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
roleName =
  
  ## (rôle) contient un composant du nom d'une personne, indiquant que celle-ci a un rôle ou une position particulière dans la société, comme un titre ou un rang officiel. [13.2.1. ]
  element roleName {
    macro.phraseSeq,
    att.global.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
placeName =
  
  ## (nom de lieu) contient un nom de lieu absolu ou relatif. [13.2.3. ]
  element placeName {
    macro.phraseSeq,
    att.datable.attributes,
    att.editLike.attributes,
    att.global.attributes,
    att.personal.attributes,
    att.typed.attributes,
    
    ## alternative
    attribute alt { text }?,
    empty
  }
bloc =
  
  ## (bloc) contient le nom d'une unité géo-politique composée d'au moins deux états ou pays [13.2.3. ]
  element bloc {
    macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    att.datable.attributes,
    empty
  }
country =
  
  ## (pays) contient le nom d'une unité géo-politique, comme une nation, un pays, une colonie ou une communauté, plus grande ou administrativement supérieure à une région et plus petite qu'un bloc. [13.2.3. ]
  element country {
    macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    att.datable.attributes,
    empty
  }
region =
  
  ## (région) contient le nom d'une unité administrative comme un état, une province ou un comté, plus grande qu'un lieu de peuplement, mais plus petite qu'un pays. [13.2.3. ]
  element region {
    macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    att.datable.attributes,
    empty
  }
district =
  
  ## (district) contient le nom d'une subdivision quelconque d'une ville, comme une paroisse, une circonscription électorale ou toute autre unité administrative ou géographique. [13.2.3. ]
  element district {
    macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    att.datable.attributes,
    empty
  }
settlement =
  
  ## (lieu de peuplement) contient le nom d'un lieu de peuplement comme une cité, une ville ou un village, identifié comme une unité géo-politique ou administrative unique. [13.2.3. ]
  element settlement {
    macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    att.datable.attributes,
    empty
  }
offset =
  
  ## (distance relative) la partie d'une expression temporelle ou spatiale qui indique la distance et/ou la direction entre les deux lieux, dates ou heures sur lesquels porte l'expression. [13.2.3. ]
  element offset {
    macro.xtext, att.global.attributes, att.typed.attributes, empty
  }
geogName =
  
  ## (nom de lieu géographique) un nom associé à une caractéristique géographique comme Windrush Valley ou le Mont Sinaï. [13.2.3. ]
  element geogName {
    macro.phraseSeq,
    att.datable.attributes,
    att.editLike.attributes,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    empty
  }
geogFeat =
  
  ## (nom de caractéristique géographique) contient un nom commun identifiant une caractéristique géographique contenue dans un nom de lieu, comme vallée, mont, etc. [13.2.3. ]
  element geogFeat {
    macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    att.datable.attributes,
    empty
  }
affiliation =
  
  ## (affiliation) contient une description non formalisée portant sur l'affiliation présente ou passée d'une personne à une organisation, par exemple un employeur ou un sponsor. [15.2.2. ]
  element affiliation {
    macro.phraseSeq,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    att.naming.attributes,
    empty
  }
age =
  
  ## (âge) précise l'âge d'une personne [13.3.2.1. ]
  element age {
    macro.phraseSeq.limited,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    
    ## fournit un code numérique représentant l'âge ou la tranche d'âge.
    attribute value { data.count }?,
    empty
  }
birth =
  
  ## (naissance) contient des informations sur la naissance d'une personne, comme la date et le lieu [15.2.2. ]
  element birth {
    macro.phraseSeq,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    att.naming.attributes,
    empty
  }
climate =
  
  ## (climat) contient des informations sur le climat physique d'un lieu. [13.3.4.3. ]
  element climate {
    (model.headLike*,
     (model.pLike+ | model.labelLike+),
     (model.noteLike | model.biblLike)*,
     climate*),
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    att.typed.attributes,
    empty
  }
death =
  
  ## (décès) contient des informations sur le décès d'une personne, comme la date et le lieu. [15.2.2. ]
  element death {
    macro.phraseSeq,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    att.naming.attributes,
    empty
  }
education =
  
  ## (éducation) contient la description du parcours scolaire d'une personne. [15.2.2. ]
  element education {
    macro.phraseSeq,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    att.naming.attributes,
    empty
  }
event =
  
  ## (évènement) contient des données liées à tout type d'évènement significatif dans l'existence d'une personne, d'un lieu ou d'une organisation. [13.3.1. ]
  element event {
    (model.headLike*,
     (model.pLike+ | model.labelLike+),
     (model.noteLike | model.biblLike | linkGrp | link)*,
     event*),
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    att.naming.attributes,
    att.sortable.attributes,
    
    ## indique la localisation d'un évènement en pointant vers un élément place
    attribute where { data.pointer }?,
    empty
  }
faith =
  
  ## (religion) précise la foi, la religion ou les croyances d'une personne. [13.3.2.1. ]
  element faith {
    macro.phraseSeq,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    att.canonical.attributes,
    empty
  }
floruit =
  
  ## (période d'activité) contient des informations sur la période d'activité d'une personne. [13.3.2.1. ]
  element floruit {
    macro.phraseSeq,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    empty
  }
geo =
  
  ## (coordonnées géographiques) contient toute expression, dans un système de notation, d'un ensemble de coordonnées géographiques représentant un point, une ligne ou une zone sur la surface de la Terre. [13.3.4.1. ]
  element geo {
    text, att.global.attributes, att.declaring.attributes, empty
  }
langKnowledge =
  
  ## (connaissances linguistiques) synthétise l'état des connaissances linguistiques d'une personne, soit en texte libre soit par une liste d'éléments langKnown. [13.3.2.1. ]
  element langKnowledge {
    (model.pLike | langKnown+),
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    
    ## fournit un ou plusieurs codes de langue valides pour les langues spécifiées.
    attribute tags {
      list { data.language+ }
    }?,
    empty
  }
langKnown =
  
  ## (compétence linguistique) synthétise l'état des connaissances d'une personne relativement à une langue particulière. [15.2.2. ]
  element langKnown {
    macro.phraseSeq.limited,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    
    ## fournit un code de langue valide pour la langue concernée.
    attribute tag { data.language },
    
    ## un code indiquant le niveau de connaissance qu'une personne a de cette langue.
    attribute level { data.word }?,
    empty
  }
listOrg =
  
  ## (liste d'organisations) contient une liste d'éléments, chacun d'eux fournissant des informations sur une organisation identifiable. [13.2.2. ]
  element listOrg {
    (model.headLike*,
     (org | listOrg)+,
     (listRelation | relationGrp | relation)*),
    att.global.attributes,
    att.typed.attributes,
    att.declarable.attributes,
    att.sortable.attributes,
    empty
  }
listEvent =
  
  ## (liste d'événements) contient une liste de descriptions, chacune d'entre elles fournissant des informations sur un événement connu. [13.3.1. ]
  element listEvent {
    (model.headLike*,
     (event | listEvent)+,
     (relation | relationGrp | listRelation)*),
    att.global.attributes,
    att.typed.attributes,
    att.declarable.attributes,
    att.sortable.attributes,
    empty
  }
listPerson =
  
  ## (liste de personnes) contient une liste d'éléments, chacun d'entre eux apportant des informations sur une personne précise ou sur un groupe de personnes, par exemple les participants à une interaction linguistique, ou les personnes citées dans une source historique. [13.3.2.  15.2.  2.4.  15.3.2. ]
  element listPerson {
    (model.headLike*,
     (model.personLike | listPerson)+,
     (relation | listRelation | relationGrp)*),
    att.global.attributes,
    att.typed.attributes,
    att.declarable.attributes,
    att.sortable.attributes,
    empty
  }
listPlace =
  
  ## (liste de lieux) contient une liste de lieux, qui peut être suivie d'une liste de relations définies entre les lieux (autres que la relation d'inclusion). [2.2.7.  13.3.4. ]
  element listPlace {
    (model.headLike*,
     (model.placeLike | listPlace)+,
     (listRelation | relationGrp | relation)*),
    att.global.attributes,
    att.typed.attributes,
    att.declarable.attributes,
    att.sortable.attributes,
    empty
  }
location =
  
  ## (localisation) définit l'emplacement d'un lieu par des coordonnées géographiques, en termes d'entités nommées dites géopolitiques, ou par une adresse. [13.3.4. ]
  element location {
    (model.labelLike
     | model.placeNamePart
     | model.offsetLike
     | model.measureLike
     | model.addressLike
     | model.noteLike
     | model.biblLike)*,
    att.global.attributes,
    att.typed.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    empty
  }
nationality =
  
  ## (nationalité) contient une description non formalisée de la nationalité ou citoyenneté présente ou passée d'une personne. [15.2.2. ]
  element nationality {
    macro.phraseSeq,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    empty
  }
occupation =
  
  ## (activité) contient une description non formalisée de l'activité, de la profession ou de l'occupation d'une personne. [15.2.2. ]
  element occupation {
    macro.phraseSeq,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    
    ## identifie le système de classification ou la taxinomie utilisés, en fournissant l'identifiant d'un élément taxonomy déclaré ailleurs dans l'en-tête.
    attribute scheme { data.pointer }?,
    
    ## contient un code d'activité défini dans le système de classification ou dans la taxonomie déclaré dans l'attribut scheme.
    attribute code { data.pointer }?,
    empty
  }
org =
  
  ## (organisation) fournit des informations sur une organisation identifiable, telle qu'une entreprise, une tribu ou tout autre groupement de personnes. [13.2.2. ]
  element org {
    (model.headLike*,
     (model.pLike*
      | (model.labelLike
         | model.nameLike
         | model.placeLike
         | model.orgPart)*),
     (model.noteLike | model.biblLike | linkGrp | link)*,
     model.personLike*),
    att.global.attributes,
    att.typed.attributes,
    att.editLike.attributes,
    att.sortable.attributes,
    
    ## spécifie le rôle principal ou la catégorie d'une organisation.
    attribute role {
      list { data.word+ }
    }?,
    empty
  }
listRelation =
  
  ## donne des informations sur les relations qui existent entre des personnes, des lieux, ou des organisations, soit de manière informelle en prose, soit de manière formelle. [13.3.2.3. ]
  element listRelation {
    (model.pLike+ | relation+),
    att.global.attributes,
    att.typed.attributes,
    att.sortable.attributes,
    empty
  }
relationGrp =
  
  ## (groupe de relations) donne des informations sur les relations qui existent entre des personnes, des lieux, ou des organisations, soit de manière informelle en prose, soit de manière formelle. [13.3.2.3. ]
  element relationGrp {
    (model.pLike+ | relation+),
    att.global.attributes,
    att.typed.attributes,
    att.sortable.attributes,
    empty
  }
person =
  
  ## (personne) fournit des informations sur un individu identifiable, par exemple un participant à une interaction linguistique, ou une personne citée dans une source historique. [13.3.2.  15.2.2. ]
  element person {
    (model.pLike+ | (model.personPart | model.global)*),
    att.global.attributes,
    att.editLike.attributes,
    att.sortable.attributes,
    
    ## précise un rôle principal ou une classification principale pour cette personne.
    attribute role {
      list {
        (
         ##
         "for"
         | 
           ##
           "against")+
      }
    }?,
    
    ## précise le sexe de la personne.
    attribute sex {
      list { data.sex+ }
    }?,
    
    ## précise une tranche d'âge pour la personne.
    attribute age { data.enumerated }?,
    empty
  }
personGrp =
  
  ## (groupe de personnes) décrit un groupe d'individus traité comme une personne unique à des fins d'analyse. [15.2.2. ]
  element personGrp {
    (model.pLike+ | model.personPart*),
    att.global.attributes,
    att.sortable.attributes,
    
    ## précise le rôle joué par ce groupe de personnes dans l'interaction.
    attribute role { data.enumerated }?,
    
    ## précise le sexe du groupe participant.
    attribute sex {
      list { data.sex+ }
    }?,
    
    ## précise la tranche d'âge des participants.
    attribute age { data.enumerated }?,
    
    ## précise la taille exacte ou approximative du groupe.
    attribute size {
      list { data.word+ }
    }?,
    empty
  }
place =
  
  ## (lieu) contient des informations sur un lieu géographique. [13.3.4. ]
  element place {
    (model.headLike*,
     (model.pLike*
      | (model.labelLike
         | model.placeStateLike
         | model.placeEventLike)*),
     (model.noteLike | model.biblLike | idno | linkGrp | link)*,
     (model.placeLike | listPlace)*),
    att.global.attributes,
    att.typed.attributes,
    att.editLike.attributes,
    att.sortable.attributes,
    empty
  }
population =
  
  ## (population) contient des informations sur la population d'un lieu. [13.3.4.3. ]
  element population {
    (model.headLike*,
     ((model.pLike+ | model.labelLike+),
      (model.noteLike | model.biblLike)*)?,
     population*),
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    att.typed.attributes,
    empty
  }
relation =
  
  ## (relation) décrit tout type de relation ou de lien à l'intérieur d'un groupe donné de participants. [13.3.2.3. ]
  element relation {
    (desc?)
    >> sch:pattern [
         id = "test21-relation-reforkeyorname-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:relation"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@ref or @key or @name"
             "One of the attributes  'name', 'ref' or 'key' must be supplied"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "test21-relation-activemutual-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:relation"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@active and @mutual"
             "Only one of the attributes\x{a}" ~
             "@active and @mutual may be supplied"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "test21-relation-activepassive-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:relation"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@passive and not(@active)"
             "the attribute 'passive'\x{a}" ~
             "	may be supplied only if the attribute 'active' is\x{a}" ~
             "	supplied"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.canonical.attributes,
    att.sortable.attributes,
    
    ## caractérise la relation sous un certain aspect, par exemple social, personnel ou autre.
    ## Suggested values include: 1] social; 2] personal; 3] other
    [ a:defaultValue = "personal" ]
    attribute type {
      
      ## forme de relation sociale.
      "social"
      | 
        ## forme de relation personnelle, comme parenté, mariage, etc.
        "personal"
      | 
        ## autres formes de relation.
        "other"
      | xsd:Name
    }?,
    
    ## fournit un nom pour le type de relation dont elle est une instance.
    attribute name { data.enumerated }?,
    (
     ## identifie les participants actifs dans une relation à sens unique, ou tous les participants dans une relation réciproque.
     attribute active {
       list { data.pointer+ }
     }?
     | 
       ## fournit une liste de participants entre lesquels la relation est réciproque.
       attribute mutual {
         list { data.pointer+ }
       }?),
    
    ## identifie les participants passifs dans une relation non mutuelle.
    attribute passive {
      list { data.pointer+ }
    }?,
    empty
  }
residence =
  
  ## (résidence) décrit les lieux de résidence présents ou passés d'une personne. [15.2.2. ]
  element residence {
    macro.phraseSeq,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    empty
  }
sex =
  
  ## (sexe) précise le sexe d'une personne. [13.3.2.1. ]
  element sex {
    macro.phraseSeq,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    
    ## supplies a coded value for sex
    attribute value {
      list { data.sex+ }
    }?,
    empty
  }
socecStatus =
  
  ## (statut socio-économique) contient une description non formalisée du statut social ou économique d'une personne. [15.2.2. ]
  element socecStatus {
    macro.phraseSeq,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    
    ## identifie le système de classification ou la taxinomie utilisés.
    attribute scheme { data.pointer }?,
    
    ## contient un code de statut existant dans le système de classification ou dans la taxonomie déclarés au moyen de l'attribut source.
    attribute code { data.pointer }?,
    empty
  }
state =
  
  ## (statut) contient la description d'un statut ou d'une qualité actuels attribués à une personne, un lieu ou une organisation. [13.3.1.  13.3.2.1.  13.3.2.1. ]
  element state {
    (state+
     | (model.headLike*,
        model.pLike+,
        (model.noteLike | model.biblLike)*)
     | (model.labelLike | model.noteLike | model.biblLike)*),
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    att.naming.attributes,
    empty
  }
terrain =
  
  ## (terrain) contient des informations sur le terrain physique d'un lieu. [13.3.4.3. ]
  element terrain {
    (model.headLike*,
     (model.pLike+ | model.labelLike+),
     (model.noteLike | model.biblLike)*,
     terrain*),
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    att.typed.attributes,
    empty
  }
trait =
  
  ## (trait distinctif) contient la description d'une caractéristique culturelle et en principe permanente, attribuée à une personne ou à un lieu. [13.3.1.  13.3.2.1.  13.3.2.1. ]
  element trait {
    (trait+
     | (model.headLike*,
        model.pLike+,
        (model.noteLike | model.biblLike)*)
     | (model.labelLike | model.noteLike | model.biblLike)*),
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    att.typed.attributes,
    empty
  }
nym =
  
  ## (nom canonique) contient la définition de tout nom ou partie de nom dans leur forme canonique. [13.3.5. ]
  element nym {
    (model.entryPart*, model.pLike*, nym*),
    att.global.attributes,
    att.typed.attributes,
    att.sortable.attributes,
    
    ## pointe vers des éléments constituants canoniques.
    attribute parts {
      list { data.pointer+ }
    }?,
    empty
  }
listNym =
  
  ## (liste de noms canoniques) contient une liste de noms normalisés pour tous types d'objets. [13.3.5. ]
  element listNym {
    (model.headLike*,
     (nym | listNym)+,
     (listRelation | relationGrp | relation)*),
    att.global.attributes,
    att.typed.attributes,
    att.declarable.attributes,
    att.sortable.attributes,
    empty
  }
att.patternReplacement.attributes =
  att.patternReplacement.attribute.matchPattern,
  att.patternReplacement.attribute.replacementPattern
att.patternReplacement.attribute.matchPattern =
  
  ## specifies a regular expression against which the values of other attributes can be matched.
  attribute matchPattern { data.pattern }
att.patternReplacement.attribute.replacementPattern =
  
  ## spécifie une règle de remplacement qui, après avoir opéré les substitutions prévues à chaque nœud, génère une URI.
  attribute replacementPattern { data.replacement }
teiHeader =
  
  ## (en-tête TEI) fournit des informations descriptives et déclaratives qui constituent une page de titre électronique au début de tout texte conforme à la TEI. [2.1.1.  15.1. ]
  element teiHeader {
    (fileDesc, model.teiHeaderPart*, revisionDesc?),
    att.global.attributes,
    
    ## spécifie le type de document auquel l'en-tête TEI se rapporte.
    ## Sample values include: 1] text; 2] corpus
    [ a:defaultValue = "text" ] attribute type { data.enumerated }?,
    empty
  }
fileDesc =
  
  ## (description bibliographique du fichier) contient une description bibliographique complète du fichier électronique. [2.2.  2.1.1. ]
  element fileDesc {
    ((titleStmt,
      editionStmt?,
      extent?,
      publicationStmt,
      seriesStmt?,
      notesStmt?),
     sourceDesc+),
    att.global.attributes,
    empty
  }
titleStmt =
  
  ## (mention de titre) regroupe les informations sur le titre d’une œuvre et les personnes ou institutions responsables de son contenu intellectuel. [2.2.1.  2.2. ]
  element titleStmt {
    (title+, model.respLike*), att.global.attributes, empty
  }
sponsor =
  
  ## (commanditaire) indique le nom d’une institution ou d’un organisme partenaires. [2.2.1. ]
  element sponsor {
    macro.phraseSeq.limited,
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
funder =
  
  ## (financeur) désigne le nom d’une personne ou d’un organisme responsable du financement d’un projet ou d’un texte. [2.2.1. ]
  element funder {
    macro.phraseSeq.limited,
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
principal =
  
  ## (chercheur principal) contient le nom du chercheur qui est principalement responsable de la création d’un texte électronique. [2.2.1. ]
  element principal {
    macro.phraseSeq.limited,
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
editionStmt =
  
  ## (mention d'édition) regroupe les informations relatives à l’édition d’un texte. [2.2.2.  2.2. ]
  element editionStmt {
    (model.pLike+ | (edition, model.respLike*)),
    att.global.attributes,
    empty
  }
edition =
  
  ## (édition) décrit les particularités de l’édition d’un texte. [2.2.2. ]
  element edition { macro.phraseSeq, att.global.attributes, empty }
extent =
  
  ## (étendue) décrit la taille approximative d’un texte stocké sur son support, numérique ou non numérique, exprimé dans une unité quelconque appropriée. [2.2.3.  2.2.  3.11.2.4.  10.7.1. ]
  element extent { macro.phraseSeq, att.global.attributes, empty }
publicationStmt =
  
  ## (mention de publication) regroupe des informations concernant la publication ou la diffusion d’un texte électronique ou d’un autre type de texte. [2.2.4.  2.2. ]
  element publicationStmt {
    ((model.publicationStmtPart.agency,
      model.publicationStmtPart.detail*)+
     | model.pLike+),
    att.global.attributes,
    empty
  }
distributor =
  
  ## (diffuseur) donne le nom d’une personne ou d’un organisme responsable de la diffusion d’un texte. [2.2.4. ]
  element distributor { macro.phraseSeq, att.global.attributes, empty }
authority =
  
  ## (responsable de la publication.) donne le nom de la personne ou de l'organisme responsable de la publication d’un fichier électronique, autre qu’un éditeur ou un distributeur. [2.2.4. ]
  element authority {
    macro.phraseSeq.limited, att.global.attributes, empty
  }
idno =
  
  ## (identifiant) donne un numéro normalisé ou non qui peut être utilisé pour identifier une référence bibliographique. [2.2.4.  2.2.5.  3.11.2.4. ]
  element idno {
    (text | model.gLike | idno)*,
    att.global.attributes,
    att.sortable.attributes,
    
    ## classe un numéro dans une catégorie, par exemple comme étant un numéro ISBN ou comme appartenant une autre série normalisée.
    attribute type { data.enumerated }?,
    empty
  }
availability =
  
  ## (disponibilité) renseigne sur la disponibilité du texte, par exemple sur toutes restrictions quant à son usage ou sa diffusion, son copyright, etc. [2.2.4. ]
  element availability {
    (model.availabilityPart | model.pLike)+,
    att.global.attributes,
    att.declarable.attributes,
    
    ## donne un code caractérisant la disponibilité actuelle d’un texte.
    [ a:defaultValue = "unknown" ]
    attribute status {
      
      ## Le texte est libre de droits.
      "free"
      | 
        ## Le statut du texte est inconnu.
        "unknown"
      | 
        ## le texte est sous droits.
        "restricted"
    }?,
    empty
  }
licence =
  
  ## contient des informations légales applicables au texte, notamment le contrat de licence définissant les droits d'utilisation. [2.2.4. ]
  element licence {
    macro.specialPara,
    att.global.attributes,
    att.pointing.attributes,
    att.datable.attributes,
    empty
  }
seriesStmt =
  
  ## (mention de collection) regroupe toute information relative à la collection (si elle existe) à laquelle appartient une publication. [2.2.5.  2.2. ]
  element seriesStmt {
    (model.pLike+
     | (title+, (editor | respStmt)*, (idno | biblScope)*)),
    att.global.attributes,
    empty
  }
notesStmt =
  
  ## (mention de notes) rassemble toutes les notes fournissant des informations sur un texte, en plus des informations mentionnées dans d'autres parties de la description bibliographique. [2.2.6.  2.2. ]
  element notesStmt {
    (model.noteLike | relatedItem)+, att.global.attributes, empty
  }
sourceDesc =
  
  ## (description de la source) décrit la source à partir de laquelle un texte électronique a été dérivé ou produit, habituellement une description bibliographique pour un texte numérisé, ou une expression comme "document numérique natif " pour un texte qui n'a aucune existence précédente. [2.2.7. ]
  element sourceDesc {
    (model.pLike+
     | (model.biblLike | model.sourceDescPart | model.listLike)+),
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
biblFull =
  
  ## (référence bibliographique totalement structurée) contient une référence bibliographique totalement structurée : tous les composants de la description du fichier TEI y sont présents. [3.11.1.  2.2.  2.2.7.  15.3.2. ]
  element biblFull {
    ((titleStmt,
      editionStmt?,
      extent?,
      publicationStmt,
      seriesStmt?,
      notesStmt?),
     sourceDesc*),
    att.global.attributes,
    att.declarable.attributes,
    att.sortable.attributes,
    att.docStatus.attributes,
    empty
  }
encodingDesc =
  
  ## (description de l'encodage) documente la relation d'un texte électronique avec sa ou ses sources. [2.3.  2.1.1. ]
  element encodingDesc {
    (model.encodingDescPart | model.pLike)+,
    att.global.attributes,
    empty
  }
projectDesc =
  
  ## (description du projet) décrit en détail le but ou l’objectif visé dans l’encodage d’un fichier électronique, ainsi que toute autre information pertinente sur la manière dont il a été construit ou recueilli. [2.3.1.  2.3.  15.3.2. ]
  element projectDesc {
    model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
samplingDecl =
  
  ## (déclaration d'échantillonnage) contient une description en texte libre du raisonnement et des méthodes utilisés pour l'échantillonnage des textes dans la création d’un corpus ou d’une collection. [2.3.2.  2.3.  15.3.2. ]
  element samplingDecl {
    model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
editorialDecl =
  
  ## (déclaration des pratiques éditoriales) donne des précisions sur les pratiques et les principes éditoriaux appliqués au cours de l’encodage du texte. [2.3.3.  2.3.  15.3.2. ]
  element editorialDecl {
    (model.pLike | model.editorialDeclPart)+,
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
correction =
  
  ## (règles de correction) établit comment et dans quelles circonstances des corrections ont été apportées au texte. [2.3.3.  15.3.2. ]
  element correction {
    model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    
    ## indique le degré de correction apporté au texte.
    [ a:defaultValue = "unknown" ]
    attribute status {
      
      ## le texte a été entièrement vérifié et corrigé.
      "high"
      | 
        ## le texte a au moins été vérifié une fois.
        "medium"
      | 
        ## le texte n’a pas été vérifié.
        "low"
      | 
        ## le niveau de correction du texte est inconnu.
        "unknown"
    }?,
    
    ## indique la méthode adoptée pour signaler les corrections dans le texte.
    [ a:defaultValue = "silent" ]
    attribute method {
      
      ## les corrections ont été faites sans être marquées.
      "silent"
      | 
        ## les corrections ont été notées par un codage
        "markup"
    }?,
    empty
  }
normalization =
  
  ## (normalisation) indique l'extension de la normalisation ou de la régularisation effectuée sur le texte source dans sa conversion vers sa forme électronique. [2.3.3.  15.3.2. ]
  element normalization {
    model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    
    ## indique l’autorité pour toute normalisation effectuée.
    attribute source { data.pointer }?,
    
    ## indique la méthode adoptée pour signaler les normalisations dans le texte.
    [ a:defaultValue = "silent" ]
    attribute method {
      
      ## normalisation effectuée sans être mentionnée.
      "silent"
      | 
        ## la normalisation a été décrite en employant un codage
        "markup"
    }?,
    empty
  }
quotation =
  
  ## (citation) décrit la pratique éditoriale adoptée par rapport aux guillements dans l’original. [2.3.3.  15.3.2. ]
  element quotation {
    (model.pLike*)
    >> sch:pattern [
         id = "test21-quotation-quotationContents-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:quotation"
           "\x{a}" ~
           "               "
           sch:report [
             test = "not(@marks) and not (tei:p)"
             "\x{a}" ~
             "On "
             sch:name [ ]
             ", either the @marks attribute should be used, or a paragraph of description provided"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.declarable.attributes,
    
    ## (guillemets) indique si les guillemets ont été retenus ou non comme faisant partie du texte.
    attribute marks {
      
      ## aucun guillemet n’a été retenu.
      "none"
      | 
        ## quelques guillemetsont été retenues.
        "some"
      | 
        ## tous les guillemets ont été conservés.
        "all"
    }?,
    
    ## précise comment les guillemets sont indiqués dans le texte.
    [ a:defaultValue = "unknown" ] attribute form { data.enumerated }?,
    empty
  }
hyphenation =
  
  ## (césurage) résume la façon dont les traits d'union sécants de fin de ligne d’un texte source ont été traités dans sa version encodée. [2.3.3.  15.3.2. ]
  element hyphenation {
    model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    
    ## (fin de ligne) indique si des traits d'union sécants de fin de ligne ont été conservés ou non dans un texte.
    [ a:defaultValue = "some" ]
    attribute eol {
      
      ## tous les traits d'union sécants de fin de ligne ont été conservés, même si la largeur des lignes de l’original peut ne pas l’avoir été.
      "all"
      | 
        ## des traits d'union sécants de fin de ligne ont été conservés dans certains cas.
        "some"
      | 
        ## tous les traits d’union sécants générés par le césurage en fin de ligne ont été supprimés : tout trait d’union sécant subsistant en fin de ligne doit être conservé.
        "hard"
      | 
        ## tous les traits d’union sécants en fin de ligne ont été supprimés : tout trait d’union sécant présent se trouvait à l’intérieur d’une ligne.
        "none"
    }?,
    empty
  }
segmentation =
  
  ## (segmentation) décrit les principes selon lesquels le texte a été segmenté, par exemple en phrases, en intonèmes (unités tonales), en strates graphématiques (niveaux superposés de signes graphiques), etc. [2.3.3.  15.3.2. ]
  element segmentation {
    model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
stdVals =
  
  ## (valeurs normalisées) précise le format utilisé pour exprimer une date ou une valeur numérique de manière normalisée . [2.3.3.  15.3.2. ]
  element stdVals {
    model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
interpretation =
  
  ## (Interprétation) décrit le champ d’application de toute information analytique ou interprétative ajoutée à la transcription du texte. [2.3.3. ]
  element interpretation {
    model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
tagsDecl =
  
  ## (déclaration de balisage) donne l’information détaillée sur le balisage appliqué à un document . [2.3.4.  2.3. ]
  element tagsDecl {
    (rendition*, \namespace*), att.global.attributes, empty
  }
tagUsage =
  
  ## (usage des balises.) donne des informations sur l’utilisation d’un élément spécifique dans un texte. [2.3.4. ]
  element tagUsage {
    macro.limitedContent,
    att.global.attributes,
    
    ## (nom de l'élément) nom (identifiant générique) de l’élément indiqué par la balise.
    attribute gi { data.name },
    
    ## spécifie le nombre d’occurrences de cet élément dans le texte.
    attribute occurs { data.count }?,
    
    ## (avec identificateur unique) spécifie le nombre d’occurrences de cet élément dans le texte qui porte une valeur donnée pour l’attribut global xml:id.
    attribute withId { data.count }?,
    
    ## spécifie l’identifiant d’un élément rendition qui définit comment cet élément doit être restitué.
    attribute render {
      list { data.pointer+ }
    }?,
    empty
  }
\namespace =
  
  ## (espace de noms) fournit le nom formel de l'espace de noms auquel appartiennent les éléments documentés par ses éléments fils. [2.3.4. ]
  element namespace {
    tagUsage+,
    att.global.attributes,
    
    ## le nom formel complet de l'espace de noms concerné.
    attribute name { data.namespace },
    empty
  }
rendition =
  
  ## (rendu) donne des informations sur le rendu ou sur l'apparence d'un ou de plusieurs éléments dans le texte source. [2.3.4. ]
  element rendition {
    macro.limitedContent,
    att.global.attributes,
    att.styleDef.attributes,
    
    ## where CSS is used, provides a way of defining pseudo-elements, that is, styling rules applicable to specific sub-portions of an element.
    ## Sample values include: 1] first-line; 2] first-letter; 3] before; 4] after
    attribute scope { data.enumerated }?,
    empty
  }
styleDefDecl =
  
  ## (style definition language declaration) specifies the name of the formal language in which style or renditional information is supplied elsewhere in the document. The specific version of the scheme may also be supplied. [2.3.5. ]
  element styleDefDecl {
    model.pLike*,
    att.global.attributes,
    att.declarable.attributes,
    att.styleDef.attributes,
    empty
  }
refsDecl =
  
  ## (Déclaration du système de références) précise la manière dont les références canoniques ont été construites pour ce texte. [2.3.6.3.  2.3.  2.3.6. ]
  element refsDecl {
    (model.pLike+ | cRefPattern+ | refState+),
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
cRefPattern =
  
  ## (Modèle de référence canonique) spécifie un modèle d’expression et des règles de remplacement pour transformer une référence canonique en URI. [2.3.6.3.  2.3.6.  2.3.6.2. ]
  element cRefPattern {
    model.pLike*,
    att.global.attributes,
    att.patternReplacement.attributes,
    empty
  }
prefixDef =
  
  ## (prefixing scheme used in data.pointer values) defines a prefixing scheme used in data.pointer values, showing how abbreviated URIs using the scheme may be expanded into full URIs. [16.2.3. ]
  element prefixDef {
    model.pLike*,
    att.global.attributes,
    att.patternReplacement.attributes,
    
    ## supplies a name which functions as the prefix for an abbreviated pointing scheme such as a private URI scheme. The prefix constitutes the text preceding the first colon.
    attribute ident { data.name },
    empty
  }
listPrefixDef =
  
  ## (list of prefix definitions) contains a list of definitions of prefixing schemes used in data.pointer values, showing how abbreviated URIs using each scheme may be expanded into full URIs. [16.2.3. ]
  element listPrefixDef {
    (prefixDef | listPrefixDef)+, att.global.attributes, empty
  }
refState =
  
  ## (état de la référence) spécifie un composant d’une référence canonique définie par la méthode du bornage. [2.3.6.3.  2.3.6. ]
  element refState {
    empty,
    att.global.attributes,
    att.milestoneUnit.attributes,
    att.edition.attributes,
    
    ## spécifie la longueur fixe du composant de la référence.
    attribute length { data.count }?,
    
    ## (délimiteur) Fournit une suite de caractères de délimitation après le composant de référence.
    attribute delim { data.text }?,
    empty
  }
classDecl =
  
  ## (déclaration de classification) contient une ou plusieurs taxinomies définissant les codes de classification utilisés n’importe où dans le texte. [2.3.7.  2.3. ]
  element classDecl { taxonomy+, att.global.attributes, empty }
taxonomy =
  
  ## (taxinomie) définit une typologie soit implicitement au moyen d’une référence bibliographique, soit explicitement au moyen d’une taxinomie structurée. [2.3.7. ]
  element taxonomy {
    ((model.glossLike | model.descLike)*
     | category+
     | (model.biblLike, category*)),
    att.global.attributes,
    empty
  }
category =
  
  ## (catégorie) contient une catégorie descriptive particulière, éventuellement intégrée dans une catégorie de niveau supérieur, à l’intérieur d’une taxinomie définie par l’utilisateur. [2.3.7. ]
  element category {
    ((catDesc+ | (model.descLike | model.glossLike)*),
     category*),
    att.global.attributes,
    empty
  }
catDesc =
  
  ## (Description de la catégorie) décrit une catégorie particulière à l’intérieur d’une taxinomie ou d’une typologie de texte, sous forme d’un court texte descriptif suivi ou dans les termes des paramètres contextuels utilisés dans l’élément Description du texte textDesc. [2.3.7. ]
  element catDesc {
    (text | model.limitedPhrase | model.catDescPart)*,
    att.global.attributes,
    empty
  }
geoDecl =
  
  ## (déclaration de coordonnées géographiques.) documente la notation et les données utilisées pour exprimer les coordonnées géographiques dans l'élément geoailleurs dans le document. [2.3.8. ]
  element geoDecl {
    macro.phraseSeq,
    att.global.attributes,
    att.declarable.attributes,
    
    ## donne un nom de code d'usage général pour les données employées.
    ## Suggested values include: 1] WGS84(World Geodetic System) ; 2] MGRS(Military Grid Reference System) ; 3] OSGB36(ordnance survey great britain) ; 4] ED50(European Datum coordinate system) 
    [ a:defaultValue = "WGS84" ]
    attribute datum {
      
      ## (Système Géodésique Mondial) couple de nombres destinés à être interprétés comme la latitude suivie de la longitude selon le Système Géodésique Mondial.
      "WGS84"
      | 
        ## (Système de Référence du Réseau Militaire,
        ##             (MGRS).) Les valeurs fournies sont des codes objet d'entités geospatiales, fondées sur les coordonnées de la grille de projection transversale universelle de Mercator, (UTM).
        "MGRS"
      | 
        ## (Système de coordonnées de Grande-Bretagne (OSGB) ) la valeur fournie est à interpréter selon le système "British national grid reference".
        "OSGB36"
      | 
        ## (système de coordonnées de données européen.) La valeur fournie doit être interprétée comme la latitude suivie de la longitude selon le système de coordonnées de données européen.
        "ED50"
      | xsd:Name
    }?,
    empty
  }
appInfo =
  
  ## (informations d'application) enregistre des informations sur l'application qui a été utilisée pour traiter le fichier TEI. [2.3.10. ]
  element appInfo {
    model.applicationLike+, att.global.attributes, empty
  }
application =
  
  ## fournit des informations sur une application qui a été utilisée pour le traitement du document. [2.3.10. ]
  element application {
    (model.labelLike+, (model.ptrLike* | model.pLike*)),
    att.global.attributes,
    att.typed.attributes,
    att.datable.attributes,
    
    ## fournit un identifiant pour l'application, indépendamment de son numéro de version ou du nom affiché.
    attribute ident { data.name },
    
    ## fournit un numéro de version pour l'application, indépendamment de son identifiant ou du nom affiché.
    attribute version { data.versionNumber },
    empty
  }
profileDesc =
  
  ## (description du profil) fournit une description détaillée des aspects non bibliographiques du texte, notamment les langues utilisées et leurs variantes, les circonstances de sa production, les collaborateurs et leur statut. [2.4.  2.1.1. ]
  element profileDesc {
    model.profileDescPart*, att.global.attributes, empty
  }
handNote =
  
  ## (note sur une main) décrit un style d'écriture ou une main qui sont reconnus dans un manuscrit. [10.7.2. ]
  element handNote {
    macro.specialPara,
    att.global.attributes,
    att.handFeatures.attributes,
    empty
  }
abstract =
  
  ## contains a summary or formal abstract prefixed to an existing source document by the encoder. [2.4.4. ]
  element abstract {
    (model.pLike | model.listLike)+,
    att.global.attributes,
    att.responsibility.attributes,
    empty
  }
creation =
  
  ## (création) contient des informations concernant la création d’un texte. [2.4.1.  2.4. ]
  element creation {
    (text | model.limitedPhrase | listChange)*,
    att.global.attributes,
    att.datable.attributes,
    empty
  }
langUsage =
  
  ## (langue utilisée) décrit les langues, variétés de langues, registres, dialectes, etc. présents à l’intérieur d’un texte. [2.4.2.  2.4.  15.3.2. ]
  element langUsage {
    language+, att.global.attributes, att.declarable.attributes, empty
  }
language =
  
  ## (langue) caractérise une langue ou une variété de langue utilisée dans un texte. [2.4.2. ]
  element language {
    macro.phraseSeq.limited,
    att.global.attributes,
    
    ## (identificateur) fournit un code de langue issu de la recommandation RFC 3066 RFC 3066 (ou son successeur) utilisé pour identifier la langue précisée par cet élément, référencé par l’attribut global xml:lang s’appliquant à l’élément considéré.
    attribute ident { data.language },
    
    ## précise approximativement le pourcentage du volume de texte utilisant cette langue.
    attribute usage {
      xsd:nonNegativeInteger { maxInclusive = "100" }
    }?,
    empty
  }
textClass =
  
  ## (classification du texte) regroupe des informations décrivant la nature ou le sujet d’un texte selon des termes issus d’un système de classification standardisé, d’un thésaurus, etc. [2.4.3. ]
  element textClass {
    (classCode | catRef | keywords)*,
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
keywords =
  
  ## (mot clé) contient une liste de mots clés ou d’expressions décrivant la nature ou le sujet d’un texte. [2.4.3. ]
  element keywords {
    (term+ | \list),
    att.global.attributes,
    
    ## désigne la liste close de mots dans lequel l'ensemble des mots-clés concernés est défini.
    attribute scheme { data.pointer }?,
    empty
  }
classCode =
  
  ## (code de classification) contient le code de classification attribué à ce texte en référence à un système standard de classification. [2.4.3. ]
  element classCode {
    macro.phraseSeq.limited,
    att.global.attributes,
    
    ## identifie le système de classification ou la taxinomie utilisée.
    attribute scheme { data.pointer },
    empty
  }
catRef =
  
  ## (référence à la catégorie) spécifie une ou plusieurs catégories définies dans une taxinomie ou une typologie textuelle. [2.4.3. ]
  element catRef {
    empty,
    att.global.attributes,
    att.pointing.attributes,
    
    ## identifie le schéma de classification dans lequel est défini le jeu de catégories concerné.
    attribute scheme { data.pointer }?,
    empty
  }
calendarDesc =
  
  ## (description des calendriers) contient la description des différents calendriers utilisés dans des dates écrits dans un manuscrit. [2.4.  2.4.5. ]
  element calendarDesc { calendar+, att.global.attributes, empty }
calendar =
  
  ## (calendrier) describes a calendar or dating system used in a dating formula in the text. [2.4.5. ]
  element calendar {
    model.pLike+, att.global.attributes, att.pointing.attributes, empty
  }
revisionDesc =
  
  ## (descriptif des révisions) fournit un résumé de l’historique des révisions d’un fichier. [2.5.  2.1.1. ]
  element revisionDesc {
    (\list | listChange | change+),
    att.global.attributes,
    att.docStatus.attributes,
    empty
  }
change =
  
  ## résume une modification ou une correction apportée à une version particulière d’un texte électronique partagé entre plusieurs chercheurs. [2.5.  2.4.1. ]
  element change {
    macro.specialPara,
    att.ascribed.attributes,
    att.datable.attributes,
    att.docStatus.attributes,
    att.global.attributes,
    att.typed.attributes,
    
    ## points to one or more elements that belong to this change.
    attribute target {
      list { data.pointer+ }
    }?,
    empty
  }
typeNote =
  
  ## (note sur les caractères typographiques.) décrit une police particulière ou un autre trait typographique significatif que l’on note dans la description d'une ressource imprimée. [10.7.2. ]
  element typeNote {
    macro.specialPara,
    att.global.attributes,
    att.handFeatures.attributes,
    empty
  }
scriptNote =
  
  ## describes a particular script distinguished within the description of a manuscript or similar resource. [10.7.2. ]
  element scriptNote {
    macro.specialPara,
    att.global.attributes,
    att.handFeatures.attributes,
    empty
  }
listChange =
  
  ## groups a number of change descriptions associated with either the creation of a source text or the revision of an encoded text. [2.5.  11.7. ]
  element listChange {
    (listChange | change)+,
    att.global.attributes,
    att.sortable.attributes,
    
    ## indicates whether the ordering of its child change elements is to be considered significant or not
    [ a:defaultValue = "true" ] attribute ordered { data.truthValue }?,
    empty
  }
att.global.linking.attributes =
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select
att.global.linking.attribute.corresp =
  
  ## (correspond) pointe vers des éléments qui ont une correspondance avec l'élément en question.
  attribute corresp {
    list { data.pointer+ }
  }?
att.global.linking.attribute.synch =
  
  ## (synchrone) pointe vers des éléments qui sont synchrones avec l'élément en question.
  attribute synch {
    list { data.pointer+ }
  }?
att.global.linking.attribute.sameAs =
  
  ## pointe vers un élément identique à l'élément en question.
  attribute sameAs { data.pointer }?
att.global.linking.attribute.copyOf =
  
  ## pointe vers un élément dont l'élément en question est une copie.
  attribute copyOf { data.pointer }?
att.global.linking.attribute.next =
  
  ## pointe vers l'élément suivant d'un ensemble virtuel dont l'élément en question est une partie.
  attribute next { data.pointer }?
att.global.linking.attribute.prev =
  
  ## ( précédent) pointe vers l'élément précédent d'un ensemble virtuel auquel appartient l'élément en question.
  attribute prev { data.pointer }?
att.global.linking.attribute.exclude =
  
  ## pointe vers des éléments qui sont une alternative exclusive à l'élément en question.
  attribute exclude {
    list { data.pointer+ }
  }?
att.global.linking.attribute.select =
  
  ## sélectionne une ou plusieurs valeurs alternatives ; si une seule valeur est sélectionnée, l'ambiguïté ou l'incertitude est marquée comme résolue. Si plus d'une valeur alternative est sélectionnée, le degré d'ambiguïté ou d'incertitude est marqué comme réduit par le nombre de valeurs alternatives non sélectionnées.
  attribute select {
    list { data.pointer+ }
  }?
link =
  
  ## ( lien) définit une association ou un lien hypertextuel entre des éléments ou des passages, lien dont le type ne peut être spécifié précisément par d'autres éléments. [16.1. ]
  element link {
    empty
    >> sch:pattern [
         id = "test21-link-linkTargets3-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:link"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "contains(@target,' ')"
             "You must supply at least two values for  @target or @targets on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.pointing.attributes,
    att.typed.attributes,
    empty
  }
linkGrp =
  
  ## (groupe de liens) définit un ensemble d'associations ou de liens hypertextuels. [16.1. ]
  element linkGrp {
    (link | ptr)+,
    att.global.attributes,
    att.pointing.group.attributes,
    empty
  }
ab =
  
  ## (bloc anonyme) contient une unité de texte quelconque, de niveau "composant", faisant office de contenant anonyme pour une expression ou des éléments de niveau intermédiaire, analogue à un paragraphe mais sans sa portée sémantique. [16.3. ]
  element ab {
    macro.paraContent,
    att.global.attribute.xmlid,
    att.global.attribute.xmllang,
    att.global.attribute.rend,
    att.global.attribute.style,
    att.global.attribute.rendition,
    att.global.attribute.xmlbase,
    att.global.attribute.xmlspace,
    att.global.linking.attribute.synch,
    att.global.linking.attribute.sameAs,
    att.global.linking.attribute.copyOf,
    att.global.linking.attribute.next,
    att.global.linking.attribute.prev,
    att.global.linking.attribute.exclude,
    att.global.linking.attribute.select,
    att.global.facs.attribute.facs,
    att.global.change.attribute.change,
    att.typed.attributes,
    att.declaring.attributes,
    att.fragmentable.attributes,
    
    ## (correspond) pointe vers des éléments qui ont une correspondance avec l'élément en question.
    attribute corresp { xsd:integer }?,
    empty
  }
anchor =
  
  ## (point d'ancrage) attache un identifiant à un point du texte, que ce point corresponde ou non à un élément textuel. [8.4.2.  16.4. ]
  element anchor {
    empty, att.global.attributes, att.typed.attributes, empty
  }
seg =
  
  ## (segment quelconque) contient une unité de texte quelconque de niveau segment. [16.3.  6.2.  7.2.5. ]
  element seg {
    macro.paraContent,
    att.global.attributes,
    att.segLike.attributes,
    att.typed.attributes,
    att.responsibility.attributes,
    empty
  }
when =
  
  ## indique un point dans le temps, soit relatif à d'autres éléments de l'élément timeline dans lequel il est contenu, soit dans l'absolu. [16.5.2. ]
  element when {
    empty,
    att.global.attributes,
    
    ## contient une valeur temporelle absolue.
    attribute absolute { data.temporal.w3c }?,
    
    ## spécifie l'unité de temps dans laquelle la valeur de l'attribut interval est exprimée, si elle n'est pas héritée de l'élément parent timeLine.
    ## Suggested values include: 1] d(days) ; 2] h(hours) ; 3] min(minutes) ; 4] s(seconds) ; 5] ms(milliseconds) 
    attribute unit {
      
      ## (jours) 
      "d"
      | 
        ## (heures) 
        "h"
      | 
        ## (minutes) 
        "min"
      | 
        ## (secondes) 
        "s"
      | 
        ## (millisecondes) 
        "ms"
      | xsd:Name
    }?,
    
    ## spécifie la partie numérique d'un intervalle de temps.
    attribute interval { data.interval }?,
    
    ## identifie le point de référence pour déterminer la date ou l'heure de l'élément courant when : cette date ou cette heure s'obtiennent en ajoutant la valeur de l'intervalle à la date du point de référence.
    attribute since { data.pointer }?,
    empty
  }
timeline =
  
  ## (frise chronologique) fournit un ensemble de points ordonnés dans le temps qui peuvent être liés à des éléments de la parole transcrite pour créer un alignement temporel de ce texte. [16.5.2. ]
  element timeline {
    when+,
    att.global.attributes,
    
    ## désigne le début de la frise chronologique, c'est-à-dire le moment où elle commence.
    attribute origin { data.pointer }?,
    
    ## spécifie l'unité de temps correspondant à la valeur de l'attribut interval de la frise chronologique ou des points temporels qui la constituent.
    ## Suggested values include: 1] d(days) ; 2] h(hours) ; 3] min(minutes) ; 4] s(seconds) ; 5] ms(milliseconds) 
    attribute unit {
      
      ## (jours) 
      "d"
      | 
        ## (heures) 
        "h"
      | 
        ## (minutes) 
        "min"
      | 
        ## (secondes) 
        "s"
      | 
        ## (millisecondes) 
        "ms"
      | xsd:Name
    }?,
    
    ## spécifie la partie numérique d'un intervalle de temps.
    attribute interval { data.interval }?,
    empty
  }
join =
  
  ## (jointure) identifie un segment de texte, qui peut être fragmenté, en pointant vers les éléments éventuellement dispersés qui le composent. [16.7. ]
  element join {
    ((model.descLike | model.certLike)*)
    >> sch:pattern [
         id = "test21-join-joinTargets3-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:join"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "contains(@target,' ')"
             "\x{a}" ~
             "You must supply at least two values for @target on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.pointing.attributes,
    att.typed.attributes,
    
    ## spécifie le nom de l'élément que cette agrégation est censée former.
    attribute result { data.name }?,
    
    ## indique si les cibles à réunir incluent l'intégralité de l'élément indiqué (le sous-arbre entier y compris sa racine) ou seulement les enfants de la cible (les branches du sous-arbre).
    [ a:defaultValue = "root" ]
    attribute scope {
      
      ## les sous-arbres dotés de leur racine qui sont désignés par l'attribut targets sont joints ; chaque sous-arbre devient un fils de l'élément virtuel créé par la jointure.
      "root"
      | 
        ## les fils des sous-arbres désignés par l'attribut targets deviennent les fils de l'élément virtuel (c'est-à-dire que les racines des sous-arbres disparaissent).
        "branches"
    }?,
    empty
  }
joinGrp =
  
  ## (groupe de jointures) regroupe une collection d'éléments join ainsi que, éventuellement, des pointeurs. [16.7. ]
  element joinGrp {
    (model.glossLike*, (join | ptr)+),
    att.global.attributes,
    att.pointing.group.attributes,
    
    ## décrit le résultat produit par le rassemblement dans cette collection des éléments join.
    attribute result { data.name }?,
    empty
  }
alt =
  
  ## (alternative) identifie une alternative ou un ensemble d'options entre des éléments ou des passages. [16.8. ]
  element alt {
    empty,
    att.global.attributes,
    att.pointing.attribute.targetLang,
    att.pointing.attribute.evaluate,
    att.typed.attributes,
    
    ## précise la cible de la référence en donnant une ou plusieurs références URI
    attribute target {
      list { data.pointer, data.pointer, data.pointer* }
    }?,
    
    ## établit si les alternatives rassemblées dans cette collection sont exclusives ou non.
    attribute mode {
      
      ## (exclusif) indique que l'alternative est exclusive, c'est-à-dire, qu'une seule des options proposées est possible.
      "excl"
      | 
        ## (non exclusif) Indique que cette alternative n'est pas exclusive, c'est-à-dire qu'une option au moins est vraie.
        "incl"
    }?,
    
    ## Si l'attribut mode a la valeur , chacune des valeurs de l'attribut weights établit la probabilité que l'option correspondante soit vraie. Si l'attribut mode a la valeur , chacune des valeurs de l'attribut weights établit la probabilité que l'option correspondante soit vraie, étant posé qu'au moins une des autres options l'est aussi.
    attribute weights {
      list { data.probability, data.probability, data.probability* }
    }?,
    empty
  }
altGrp =
  
  ## (groupe d'alternatives) regroupe une collection d'éléments alt et, éventuellement, de pointeurs. [16.8. ]
  element altGrp {
    (alt | ptr)*,
    att.global.attributes,
    att.pointing.group.attributes,
    
    ## établit si les alternatives rassemblées dans cette collection sont exclusives ou non.
    [ a:defaultValue = "excl" ]
    attribute mode {
      
      ## (exclusif) indique que l'alternative est exclusive, c'est-à-dire qu'une seule des alternatives proposées est possible.
      "excl"
      | 
        ## (non exclusif) indique que l'alternative n'est pas exclusive, c'est-à-dire qu'une alternative au moins est vraie.
        "incl"
    }?,
    empty
  }
att.msExcerpt.attributes = att.msExcerpt.attribute.defective
att.msExcerpt.attribute.defective =
  
  ## indique si le passage décrit est fautif, i.e. incomplet en raison d'une lacune ou d'une détérioration.
  [ a:defaultValue = "false" ] attribute defective { data.xTruthValue }?
msDesc =
  
  ## (description d'un manuscrit) contient la description d'un manuscrit bien individualisé [10.1. ]
  element msDesc {
    (msIdentifier,
     model.headLike*,
     (model.pLike+
      | (msContents?, physDesc?, history?, additional?, msPart*))),
    att.global.attributes,
    att.sortable.attributes,
    att.typed.attributes,
    empty
  }
catchwords =
  
  ## (réclames) décrit le système utilisé pour s'assurer que les cahiers formant un manuscrit ou un incunable sont dans le bon ordre, typiquement au moyen d'annotations en bas de page. [10.3.7. ]
  element catchwords { macro.phraseSeq, att.global.attributes, empty }
dimensions =
  
  ## (dimensions) contient une spécification des dimensions. [10.3.4. ]
  element dimensions {
    ((dim | model.dimLike)*)
    >> sch:pattern [
         id = "test21-dimensions-duplicateDim-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:dimensions"
           "\x{a}" ~
           "               "
           sch:report [
             test = "count(tei:width)> 1"
             "\x{a}" ~
             "The element "
             sch:name [ ]
             " may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "test21-dimensions-duplicateDim-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:dimensions"
           "\x{a}" ~
           "               "
           sch:report [
             test = "count(tei:height)> 1"
             "\x{a}" ~
             "The element "
             sch:name [ ]
             " may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "test21-dimensions-duplicateDim-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:dimensions"
           "\x{a}" ~
           "               "
           sch:report [
             test = "count(tei:depth)> 1"
             "\x{a}" ~
             "The element "
             sch:name [ ]
             " may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.dimensions.attributes,
    
    ## indique quel aspect de l'objet est mesuré.
    ## Sample values include: 1] leaves; 2] ruled; 3] pricked; 4] written; 5] miniatures; 6] binding; 7] box
    attribute type { data.enumerated }?,
    empty
  }
dim =
  
  ## contains any single measurement forming part of a dimensional specification of some sort. [10.3.4. ]
  element dim {
    macro.xtext,
    att.global.attributes,
    att.typed.attributes,
    att.dimensions.attributes,
    empty
  }
height =
  
  ## (hauteur) contient une dimension prise sur l'axe parallèle au dos du manuscrit. [10.3.4. ]
  element height {
    macro.xtext, att.global.attributes, att.dimensions.attributes, empty
  }
depth =
  
  ## (épaisseur) contient une dimension mesurée sur le dos du manuscrit. [10.3.4. ]
  element depth {
    macro.xtext, att.global.attributes, att.dimensions.attributes, empty
  }
width =
  
  ## (largeur) contient une dimension mesurée sur l'axe perpendiculaire au dos du manuscrit. [10.3.4. ]
  element width {
    macro.xtext, att.global.attributes, att.dimensions.attributes, empty
  }
heraldry =
  
  ## (héraldique) contient une devise ou une formule d'héraldique, comme celles qu'on trouve sur un blason, des armoiries, etc. [10.3.8. ]
  element heraldry { macro.phraseSeq, att.global.attributes, empty }
locus =
  
  ## (locus) définit un emplacement au sein d'un manuscrit ou d'une partie de manuscrit, souvent une séquence, éventuellement discontinue, de références de feuillets. [10.3.5. ]
  element locus {
    macro.xtext,
    att.global.attributes,
    att.pointing.attributes,
    
    ## (système) désigne le système de foliotation utilisé pour localiser la subdivision du manuscrit qui est en cours de description.
    attribute scheme { data.pointer }?,
    
    ## (depuis) Spécifie, sous une forme normalisée, le point de départ de la localisation.
    attribute from { data.word }?,
    
    ## (jusqu'à) Spécifie, sous une forme normalisée, la borne de fin pour la localisation.
    attribute to { data.word }?,
    empty
  }
locusGrp =
  
  ## (groupe d'emplacements) regroupe un certain nombre d'emplacements qui forment ensemble un item identifiable bien que discontinu dans un manuscrit ou une partie de manuscrit selon une foliotation spécifique. [10.3.5. ]
  element locusGrp {
    locus+,
    att.global.attributes,
    
    ## (système) désigne le système de foliotation selon lequel les emplacements contenus dans le groupe sont définis.
    attribute scheme { data.pointer }?,
    empty
  }
material =
  
  ## (matériau) Contient un mot ou une expression décrivant le ou les matériau(x) utilisé(s) pour fabriquer un manuscrit (ou une partie d'un manuscrit). [10.3.2. ]
  element material {
    macro.phraseSeq,
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
objectType =
  
  ## (type d'objet) contient un mot ou une expression qui décrit le type de l'objet consideré. [10.3.2. ]
  element objectType {
    macro.phraseSeq,
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
origDate =
  
  ## (date de la création) Contient une date, dans une forme libre, utilisée pour dater la création d'un manuscrit ou d'une partie d'un manuscrit. [10.3.1. ]
  element origDate {
    (text | model.gLike | model.phrase | model.global)*,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    empty
  }
origPlace =
  
  ## (lieu de création) Contient un nom de lieu, dans une forme libre, utilisé pour désigner l'endroit où a été produit un manuscrit ou une partie d'un manuscrit. [10.3.1. ]
  element origPlace {
    macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    empty
  }
secFol =
  
  ## (deuxième folio) Le mot ou les mots repris d'un point précisément connu d'un codex (comme le début du second feuillet) pour identifier celui-ci de façon univoque. [10.3.7. ]
  element secFol { macro.phraseSeq, att.global.attributes, empty }
signatures =
  
  ## (signatures) Contient une étude des signatures trouvées sur un feuillet ou sur un cahier dans un manuscrit. [10.3.7. ]
  element signatures { macro.phraseSeq, att.global.attributes, empty }
stamp =
  
  ## (cachet) Contient un mot ou une expression décrivant un cachet ou une marque du même genre. [10.3.3. ]
  element stamp {
    macro.phraseSeq,
    att.global.attributes,
    att.typed.attributes,
    att.datable.attributes,
    empty
  }
watermark =
  
  ## (filigrane) Contient un mot ou une expression décrivant un filigrane ou une marque du même genre. [10.3.3. ]
  element watermark { macro.phraseSeq, att.global.attributes, empty }
msIdentifier =
  
  ## (identifiant du manuscrit) Contient les informations requises pour identifier le manuscrit en cours de description. [10.4. ]
  element msIdentifier {
    ((model.placeNamePart_sequenceOptional,
      institution?,
      repository?,
      collection*,
      idno?),
     (msName | altIdentifier)*)
    >> sch:pattern [
         id = "test21-msIdentifier-msId_minimal-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:msIdentifier"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "not(parent::tei:msPart) and       (local-name(*[1])='idno' or       local-name(*[1])='altIdentifier' or       normalize-space(.)='')"
             "An msIdentifier must contain either a repository or location of some type, or a manuscript name"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    empty
  }
institution =
  
  ## (institution) Contient le nom d'un organisme (comme une université ou une bibliothèque), avec lequel un manuscrit est identifié ; en général c'est le nom de l'institution qui conserve ce manuscrit. [10.4. ]
  element institution {
    macro.xtext, att.global.attributes, att.naming.attributes, empty
  }
repository =
  
  ## (lieu de conservation) Contient le nom d'un dépôt dans lequel des manuscrits sont entreposés, et qui peut faire partie d'une institution. [10.4. ]
  element repository {
    macro.xtext, att.global.attributes, att.naming.attributes, empty
  }
collection =
  
  ## (collection) Contient le nom d'une collection de manuscrits, ceux-ci ne se trouvant pas nécessairement dans le même lieu de conservation. [10.4. ]
  element collection {
    macro.xtext,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    empty
  }
altIdentifier =
  
  ## (alternative identifier) contains an alternative or former structured identifier used for a manuscript, such as a former catalogue number. [10.4. ]
  element altIdentifier {
    (country?,
     region?,
     settlement?,
     institution?,
     repository?,
     collection?,
     idno,
     note?),
    att.typed.attributes,
    empty
  }
msName =
  
  ## (autre nom) contient un autre nom, dans une forme libre, utilisé pour désigner le manuscrit, tel qu'un surnom ou un ocellus nominum. [10.4. ]
  element msName {
    macro.xtext, att.global.attributes, att.typed.attributes, empty
  }
colophon =
  
  ## (colophon) contient le colophon d'une section d'un manuscrit, c'est-à-dire la transcription des informations relatives à la date, au lieu, à l'organisme commanditaire ou aux raisons de la production du manuscrit. [10.6.1. ]
  element colophon { macro.phraseSeq, att.global.attributes, empty }
explicit =
  
  ## (explicit) contient l'explicit d'une section d'un manuscrit, c'est-à-dire les mots terminant le texte proprement dit, à l'exclusion de toute rubrique ou colophon qui pourraient le suivre. [10.6.1. ]
  element explicit {
    macro.phraseSeq,
    att.global.attributes,
    att.typed.attributes,
    att.msExcerpt.attributes,
    empty
  }
filiation =
  
  ## (filiation) contient les informations sur la filiation du manuscrit, c'est-à-dire sur ses relations avec d'autres manuscrits connus du même texte, ses protographes, antigraphes et apographes. [10.6.1. ]
  element filiation {
    macro.specialPara,
    att.global.attributes,
    att.typed.attributes,
    empty
  }
finalRubric =
  
  ## (rubrique de fin) Contient les derniers mots d'une section de texte, qui incluent souvent la mention de son auteur et de son titre, et sont généralement différenciés du texte lui-même par l'utilisation d'une encre rouge, par une taille ou un style d'écriture particuliers, ou par tout autre moyen visuel. [10.6.1. ]
  element finalRubric {
    macro.phraseSeq, att.global.attributes, att.typed.attributes, empty
  }
msContents =
  
  ## (contenu du manuscrit) décrit le contenu intellectuel d'un manuscrit ou d'une partie d'un manuscrit, soit en une série de paragraphes p, soit sous la forme d'une série d'éléments structurés msItem concernant les items du manuscrit. [10.6. ]
  element msContents {
    (model.pLike+
     | (summary?, textLang?, titlePage?, (msItem | msItemStruct)*)),
    att.global.attributes,
    att.msExcerpt.attributes,
    
    ## spécifie la ou les catégories ou classes auxquelles le manuscrit appartient.
    attribute class {
      list { data.pointer+ }
    }?,
    empty
  }
msItem =
  
  ## (item de manuscrit) décrit une œuvre ou un item individualisés dans le contenu intellectuel d'un manuscrit ou d'une partie de manuscrit. [10.6.1. ]
  element msItem {
    ((locus | locusGrp)*,
     (model.pLike+
      | (model.titlepagePart | model.msItemPart | model.global)+)),
    att.global.attributes,
    att.msExcerpt.attributes,
    
    ## spécifie la ou les catégories ou classes auxquelles l'item appartient.
    attribute class {
      list { data.pointer+ }
    }?,
    empty
  }
msItemStruct =
  
  ## (description structurée d'un item de manuscrit) contient la description structurée d'un item ou d'une œuvre, dans le contenu intellectuel d'un manuscrit ou d'une partie d'un manuscrit. [10.6.1. ]
  element msItemStruct {
    ((locus | locusGrp)?,
     (model.pLike+
      | (author*,
         respStmt*,
         title*,
         rubric?,
         msItemStruct*,
         explicit?,
         finalRubric?,
         colophon*,
         decoNote*,
         listBibl*,
         (bibl | biblStruct)*,
         model.noteLike*,
         textLang?))),
    att.global.attributes,
    att.msExcerpt.attributes,
    
    ## (classe) spécifie la ou les catégories ou classes auxquelles l'item appartient.
    attribute class {
      list { data.pointer+ }
    }?,
    empty
  }
rubric =
  
  ## (rubrique) contient le texte d'une rubrique ou d'un intitulé propres à un item, c'est-à-dire des mots qui signalent le début du texte, qui incluent souvent la mention de son auteur et de son titre, et qui sont différenciés du texte lui-même, généralement à l'encre rouge, par une taille ou un style d'écriture particuliers, ou par tout autre procédé de ce genre. [10.6.1. ]
  element rubric {
    macro.phraseSeq, att.global.attributes, att.typed.attributes, empty
  }
summary =
  
  ## contains an overview of the available information concerning some aspect of an item (for example, its intellectual content, history, layout, typography etc.) as a complement or alternative to the more detailed information carried by more specific elements. [10.6. ]
  element summary { macro.phraseSeq, att.global.attributes, empty }
physDesc =
  
  ## (description physique) contient la description physique complète d'un manuscrit ou d'une partie d'un manuscrit, éventuellement structurée en utilisant les éléments plus spécialisés appartenant à la classe model.physDescPart. [10.7. ]
  element physDesc {
    (model.pLike*, model.physDescPart_sequenceOptional),
    att.global.attributes,
    empty
  }
objectDesc =
  
  ## (description d'objet) contient la description des composants matériels de l'objet en cours de traitement [10.7.1. ]
  element objectDesc {
    (model.pLike+ | (supportDesc?, layoutDesc?)),
    att.global.attributes,
    
    ## (forme) contient un nom abrégé spécifique au projet, désignant la forme physique du support, par exemple : codex, rouleau, fragment, fragment de feuillet, découpe, etc.
    attribute form { data.enumerated }?,
    empty
  }
supportDesc =
  
  ## (description du support) Regroupe les éléments décrivant le support physique du texte du manuscrit. [10.7.1. ]
  element supportDesc {
    (model.pLike+
     | (support?, extent?, foliation*, collation?, condition?)),
    att.global.attributes,
    
    ## (matériau) contient un nom abrégé propre au projet désignant le matériau qui a principalement servi pour fabriquer le support.
    ## Suggested values include: 1] paper(paper) ; 2] parch(parchment) ; 3] mixed
    attribute material {
      
      ## (paper) 
      "paper"
      | 
        ## (parchemin) 
        "parch"
      | 
        ##
        "mixed"
      | xsd:Name
    }?,
    empty
  }
support =
  
  ## (support) contient la description des matériaux, techniques, etc., qui ont servi à fabriquer le support physique du texte du manuscrit. [10.7.1. ]
  element support { macro.specialPara, att.global.attributes, empty }
collation =
  
  ## (collation) contient la description de l'organisation des feuillets ou bifeuillets d'un manuscrit [10.7.1. ]
  element collation { macro.specialPara, att.global.attributes, empty }
foliation =
  
  ## (foliotation) décrit le ou les systèmes de numérotation des feuillets ou pages d'un codex [10.7.1.4. ]
  element foliation { macro.specialPara, att.global.attributes, empty }
condition =
  
  ## (état matériel) contient la description de l'état matériel du manuscrit. [10.7.1.5. ]
  element condition { macro.specialPara, att.global.attributes, empty }
layoutDesc =
  
  ## (description de la mise en page) rassemble les descriptions des mises en page d' un manuscrit. [10.7.2. ]
  element layoutDesc {
    (model.pLike+ | (summary?, layout+)),
    att.global.attributes,
    empty
  }
layout =
  
  ## (mise en page) décrit comment le texte est disposé sur la page, ce qui inclut les informations sur d'éventuels systèmes de réglure, de piqûre ou d'autres techniques de préparation de la page. [10.7.2. ]
  element layout {
    macro.specialPara,
    att.global.attributes,
    
    ## (colonnes) spécifie le nombre de colonnes présentes sur une page
    attribute columns {
      list { data.count, data.count? }
    }?,
    
    ## (lignes de réglure) spécifie le nombre de lignes de réglure présentes par colonne
    attribute ruledLines {
      list { data.count, data.count? }
    }?,
    
    ## (lignes d'écriture) spécifie le nombre de lignes écrites par colonne
    attribute writtenLines {
      list { data.count, data.count? }
    }?,
    empty
  }
handDesc =
  
  ## (description des écritures) contient la description des différents types d'écriture utilisés dans un manuscrit. [10.7.2. ]
  element handDesc {
    (model.pLike+ | (summary?, handNote+)),
    att.global.attributes,
    
    ## (mains) spécifie le nombre de mains différentes qui ont pu être identifiées dans le manuscrit
    attribute hands { data.count }?,
    empty
  }
typeDesc =
  
  ## (description des styles de caractère) contient la description des styles de caractères ou d'autres aspects de l'impression d'un incunable ou d'une autre source imprimée. [10.7.2.1. ]
  element typeDesc {
    (model.pLike+ | (summary?, typeNote+)),
    att.global.attributes,
    empty
  }
scriptDesc =
  
  ## contains a description of the scripts used in a manuscript or similar source. [10.7.2.1. ]
  element scriptDesc {
    (model.pLike+ | (summary?, scriptNote+)),
    att.global.attributes,
    empty
  }
musicNotation =
  
  ## (notation musicale) contient la description d'un type de notation musicale. [10.7.2. ]
  element musicNotation {
    macro.specialPara, att.global.attributes, empty
  }
decoDesc =
  
  ## (description de la décoration) contient la description de la décoration du manuscrit, soit en une série de paragraphes p, soit sous la forme d'une série d'éléments thématiques decoNote [10.7.3. ]
  element decoDesc {
    (model.pLike+ | (summary?, decoNote+)),
    att.global.attributes,
    empty
  }
decoNote =
  
  ## (note sur un élément de décoration) contient une note décrivant soit un élément de décoration du mansucrit, soit une catégorie relativement homogène de tels éléments. [10.7.3. ]
  element decoNote {
    macro.specialPara,
    att.global.attributes,
    att.typed.attributes,
    empty
  }
additions =
  
  ## (ajouts) contient la description des ajouts significatifs trouvés dans un manuscrit, tels que gloses marginales ou autres annotations. [10.7.2. ]
  element additions { macro.specialPara, att.global.attributes, empty }
bindingDesc =
  
  ## (description de la reliure) décrit les reliures actuelles et anciennes d'un manuscrit, soit en une série de paragraphes p, soit sous la forme d'une série d'éléments binding, un pour chaque reliure [10.7.3.1. ]
  element bindingDesc {
    ((model.pLike | decoNote | condition)+ | binding+),
    att.global.attributes,
    empty
  }
binding =
  
  ## (reliure) contient la description d'une reliure, i.e. du type de couverture, d'ais, etc., rencontrés. [10.7.3.1. ]
  element binding {
    (model.pLike | condition | decoNote)+,
    att.global.attributes,
    att.datable.attributes,
    
    ## (contemporaine) spécifie si la reliure est contemporaine ou non de l'essentiel du contenu du manuscrit.
    attribute contemporary { data.xTruthValue }?,
    empty
  }
sealDesc =
  
  ## (description des sceaux) décrit les sceaux ou autres objets attachés au manuscrit, soit en une série de paragraphes p, soit sous la forme d'une série d'éléments seal, complétés éventuellement par des éléments decoNote. [10.7.3.2. ]
  element sealDesc {
    (model.pLike+
     | (summary?, (decoNote | seal | condition)+)),
    att.global.attributes,
    empty
  }
seal =
  
  ## (sceau) contient la description d'un sceau ou d'un objet similaire, attaché au manuscrit. [10.7.3.2. ]
  element seal {
    (model.pLike | decoNote)+,
    att.global.attributes,
    att.typed.attributes,
    att.datable.attributes,
    
    ## (contemporain) spécifie si le sceau est ou non contemporain du manuscrit auquel il est attaché.
    attribute contemporary { data.xTruthValue }?,
    empty
  }
accMat =
  
  ## (matériel d'accompagnement) donne des détails sur tout matériel d'accompagnement étroitement associé au manuscrit, tel que documents non contemporains ou fragments reliés avec le manuscrit à une époque antérieure. [10.7.3.3. ]
  element accMat {
    macro.specialPara,
    att.global.attributes,
    att.typed.attributes,
    empty
  }
history =
  
  ## (histoire) rassemble les éléments servant à donner un historique complet du manuscrit ou d'une partie du manuscrit. [10.8. ]
  element history {
    (model.pLike+ | (summary?, origin?, provenance*, acquisition?)),
    att.global.attributes,
    empty
  }
origin =
  
  ## (origine) contient des informations sur l'origine du manuscrit ou de la partie de manuscrit. [10.8. ]
  element origin {
    macro.specialPara,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    empty
  }
provenance =
  
  ## (provenance) contient des informations sur un épisode précis de l'histoire du manuscrit ou de la partie du manuscrit, après sa création et avant son acquisition [10.8. ]
  element provenance {
    macro.specialPara,
    att.global.attributes,
    att.datable.attributes,
    att.typed.attributes,
    att.responsibility.attributes,
    empty
  }
acquisition =
  
  ## (acquisition) contient des informations sur les modalités et circonstances de l'entrée du manuscrit ou de la partie du manuscrit dans l'institution qui le détient [10.8. ]
  element acquisition {
    macro.specialPara,
    att.global.attributes,
    att.datable.attributes,
    empty
  }
additional =
  
  ## (informations complémentaires) regroupe les informations complémentaires sur le manuscrit, incluant une bibliographie, des indications sur ses reproductions, ou des informations sur sa conservation et sur sa gestion [10.9. ]
  element additional {
    (adminInfo?, surrogates?, listBibl?), att.global.attributes, empty
  }
adminInfo =
  
  ## (informations administratives) contient, pour le manuscrit en cours de description, les informations sur son détenteur actuel, sur ses conditions d'accès et sur les modalités de sa description. [10.9.1. ]
  element adminInfo {
    (recordHist?, availability?, custodialHist?, model.noteLike?),
    att.global.attributes,
    empty
  }
recordHist =
  
  ## (histoire de la description) donne des informations sur la source de la description et sur les modifications apportées à la description précédente. [10.9.1. ]
  element recordHist {
    (model.pLike+ | (source, change*)),
    att.global.attributes,
    empty
  }
source =
  
  ## (source) décrit la source des informations contenues dans la description du manuscrit. [10.9.1.1. ]
  element source { macro.specialPara, att.global.attributes, empty }
custodialHist =
  
  ## (histoire de la conservation) contient des informations sur l'histoire de la conservation, soit en texte libre, soit sous la forme d'une série d'éléments custEvent. [10.9.1.2. ]
  element custodialHist {
    (model.pLike+ | custEvent+), att.global.attributes, empty
  }
custEvent =
  
  ## (événement dans la conservation) décrit un événement dans l'histoire de la conservation du manuscrit. [10.9.1.2. ]
  element custEvent {
    macro.specialPara,
    att.global.attributes,
    att.datable.attributes,
    att.typed.attributes,
    empty
  }
surrogates =
  
  ## (reproductions) contient des informations sur toute reproduction numérique ou photographique du manuscrit en cours de description, qu'elle soit détenue par l'institution de conservation ou ailleurs. [10.9. ]
  element surrogates { macro.specialPara, att.global.attributes, empty }
msPart =
  
  ## (partie d'un manuscrit) contient des informations sur un manuscrit distinct à l'origine, ou sur une partie d'un manuscrit, qui constitue actuellement une section d'un manuscrit composite. [10.10. ]
  element msPart {
    ((altIdentifier | msIdentifier),
     model.headLike*,
     (model.pLike+
      | (msContents?, physDesc?, history?, additional?, msPart*))),
    att.global.attributes,
    empty
  }
att.global.facs.attributes = att.global.facs.attribute.facs
att.global.facs.attribute.facs =
  
  ## (fac-similé) pointe directement vers une image ou vers une partie d'une image correspondant au contenu de l'élément.
  attribute facs {
    list { data.pointer+ }
  }?
att.global.change.attributes = att.global.change.attribute.change
att.global.change.attribute.change =
  
  ## points to one or more change elements documenting a state or revision campaign to which the element bearing this attribute and its children have been assigned by the encoder.
  attribute change {
    list { data.pointer+ }
  }?
att.coordinated.attributes =
  att.coordinated.attribute.start,
  att.coordinated.attribute.ulx,
  att.coordinated.attribute.uly,
  att.coordinated.attribute.lrx,
  att.coordinated.attribute.lry
att.coordinated.attribute.start =
  
  ## désigne l'élément qui, dans la transcription du texte, contient au moins le début de la section de texte représentée dans la zone ou surface.
  attribute start { data.pointer }?
att.coordinated.attribute.ulx =
  
  ## donne la valeur x de l'abscisse du coin supérieur gauche d'un rectangle.
  attribute ulx { data.numeric }?
att.coordinated.attribute.uly =
  
  ## donne la valeur y de l'ordonnée du coin supérieur gauche d'un rectangle.
  attribute uly { data.numeric }?
att.coordinated.attribute.lrx =
  
  ## donne la valeur x de l'abscisse du coin inférieur droit d'un rectangle.
  attribute lrx { data.numeric }?
att.coordinated.attribute.lry =
  
  ## donne la valeur y de l'ordonnée du coin inférieur droit d'un rectangle.
  attribute lry { data.numeric }?
facsimile =
  
  ## contient une représentation d'une source écrite quelconque sous la forme d'un ensemble d'images plutôt que sous la forme d'un texte transcrit ou encodé. [11.1. ]
  element facsimile {
    (front?, (model.graphicLike | surface | surfaceGrp)+, back?),
    att.global.attributes,
    att.declaring.attributes,
    empty
  }
sourceDoc =
  
  ## contains a transcription or other representation of a single source document potentially forming part of a dossier génétique or collection of sources. [11.1.  11.2.2. ]
  element sourceDoc {
    (model.global | model.graphicLike | surface | surfaceGrp)+,
    att.global.attributes,
    att.declaring.attributes,
    empty
  }
surface =
  
  ## définit une surface écrite comme un rectangle décrit par ses coordonnées spatiales, en regroupant éventuellement une ou plusieurs représentations graphiques de cet espace et des zones rectangulaires intéressantes à l'intérieur de celui-ci. [11.1.  11.2.2. ]
  element surface {
    ((model.global | model.labelLike | model.graphicLike)*,
     ((zone | line | surface | surfaceGrp), model.global*)*),
    att.global.attributes,
    att.coordinated.attributes,
    att.declaring.attributes,
    att.typed.attributes,
    
    ## describes the method by which this surface is or was connected to the main surface
    ## Sample values include: 1] glued; 2] pinned; 3] sewn
    attribute attachment { data.enumerated }?,
    
    ## indicates whether the surface is attached and folded in such a way as to provide two writing surfaces
    attribute flipping { data.truthValue }?,
    empty
  }
surfaceGrp =
  
  ## defines any kind of useful grouping of written surfaces, for example the recto and verso of a single leaf, which the encoder wishes to treat as a single unit. [11.1. ]
  element surfaceGrp {
    (model.global | surface | surfaceGrp)+,
    att.global.attributes,
    att.coordinated.attributes,
    att.declaring.attributes,
    att.typed.attributes,
    empty
  }
zone =
  
  ## définit une zone rectangulaire contenue dans un élément surface. [11.1.  11.2.2. ]
  element zone {
    (text
     | model.graphicLike
     | model.global
     | surface
     | model.linePart)*,
    att.global.attributes,
    att.coordinated.attributes,
    att.typed.attributes,
    
    ## identifies a two dimensional area within the bounding box specified by the other attributes by means of a series of pairs of numbers, each of which gives the x,y coordinates of a point on a line enclosing the area.
    attribute points {
      list { data.point, data.point, data.point, data.point* }
    }?,
    
    ## indicates the amount by which this zone has been rotated clockwise, with respect to the normal orientation of the parent surface element as implied by the dimensions given in the msDesc element or by the coordinates of the surface itself. The orientation is expressed in arc degrees.
    [ a:defaultValue = "0" ] attribute rotate { data.count }?,
    empty
  }
addSpan =
  
  ## (partie de texte ajoutée) marque le début d'une longue partie de texte ajoutée par un auteur, un copiste, un annotateur ou un correcteur (voir aussi add). [11.3.1.4. ]
  element addSpan {
    empty
    >> sch:pattern [
         id = "test21-addSpan-spanTo-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:addSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "The spanTo= attribute of "
             sch:name [ ]
             " is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "test21-addSpan-spanTo_fr-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:addSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "L'attribut spanTo est requis."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.transcriptional.attributes,
    att.placement.attributes,
    att.typed.attributes,
    
    ## indique la fin d'un passage introduit par l'élément portant cet attribut.
    attribute spanTo { data.pointer }
    >> sch:pattern [
         id = "test21-addSpan-spanTo-spanTo-2-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@spanTo]"
           "\x{a}" ~
           "               "
           sch:assert [
             test =
               "id(substring(@spanTo,2)) and following::*[@xml:id=substring(current()/@spanTo,2)]"
             "\x{a}" ~
             "The element indicated by @spanTo ("
             sch:value-of [ select = "@spanTo" ]
             ") must follow the current element "
             sch:name [ ]
             "\x{a}" ~
             "                  "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
damage =
  
  ## (dommage) sert à encoder une zone qui a subi des dommages dans le manuscrit témoin du texte. [11.3.3.1. ]
  element damage {
    macro.paraContent,
    att.global.attributes,
    att.typed.attributes,
    att.damaged.attributes,
    empty
  }
damageSpan =
  
  ## (partie de texte endommagée) marque le début d'une longue partie de texte, endommagée d'une manière quelconque mais toujours lisible. [11.3.3.1. ]
  element damageSpan {
    empty
    >> sch:pattern [
         id = "test21-damageSpan-spanTo-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:damageSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "\x{a}" ~
             "The @spanTo attribute of "
             sch:name [ ]
             " is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "test21-damageSpan-spanTo_fr-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:damageSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "L'attribut spanTo est requis."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.damaged.attributes,
    att.typed.attributes,
    att.spanning.attributes,
    empty
  }
delSpan =
  
  ## (partie de texte supprimée) marque le début d'une longue partie de texte supprimée, signalée comme supprimée ou bien signalée comme superflue ou fausse par un auteur, un copiste, un annotateur ou un correcteur. [11.3.1.4. ]
  element delSpan {
    empty
    >> sch:pattern [
         id = "test21-delSpan-spanTo-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:delSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "The spanTo= attribute of "
             sch:name [ ]
             " is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "test21-delSpan-spanTo_fr-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:delSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "L'attribut spanTo est requis."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.transcriptional.attributes,
    att.typed.attributes,
    att.spanning.attributes,
    empty
  }
ex =
  
  ## (développement éditorial) contient une succession de lettres ajoutées par un éditeur ou un transcripteur pour développer une abréviation. [11.3.1.2. ]
  element ex {
    macro.xtext, att.global.attributes, att.editLike.attributes, empty
  }
fw =
  
  ## (élément de mise en page) permet d'encoder un titre courant (en haut ou en bas de la page), une réclame ou une autre information comparable, qui apparaît sur la page courante. [11.6. ]
  element fw {
    macro.phraseSeq,
    att.global.attributes,
    att.placement.attributes,
    
    ## caractérise l'information encodée conformément à une typologie appropriée.
    ## Sample values include: 1] header; 2] footer; 3] pageNum(page number) ; 4] lineNum(line number) ; 5] sig(signature) ; 6] catch(catchword) 
    attribute type { data.enumerated }?,
    empty
  }
handNotes =
  
  ## contient un ou plusieurs éléments handNote qui documentent les différentes mains identifiées dans les textes source. [11.3.2.1. ]
  element handNotes { handNote+, att.global.attributes, empty }
handShift =
  
  ## (reprise de main) marque le début d'une section du texte écrite par une nouvelle main ou le début d'une nouvelle séance d'écriture. [11.3.2.1. ]
  element handShift {
    empty,
    att.global.attributes,
    att.handFeatures.attributes,
    att.responsibility.attributes,
    
    ## donne l'identifiant de la nouvelle main.
    attribute new { data.pointer }?,
    empty
  }
am =
  
  ## (marqueur d'abréviation) contient une succession de lettres ou de signes présents dans une abréviation mais omis ou remplacés dans la forme développée de l'abréviation [11.3.1.2. ]
  element am {
    (text | model.gLike | model.pPart.transcriptional)*,
    att.global.attributes,
    att.typed.attributes,
    att.editLike.attributes,
    empty
  }
restore =
  
  ## (rétablissement) indique le rétablissement d'un état antérieur du texte par suppression d'une marque ou d'une instruction de l'éditeur ou de l'auteur. [11.3.1.6. ]
  element restore {
    macro.paraContent,
    att.global.attributes,
    att.transcriptional.attributes,
    att.typed.attributes,
    empty
  }
space =
  
  ## (espace) permet de situer un espace significatif dans le texte édité. [11.5.1. ]
  element space {
    (model.descLike | model.certLike)*,
    att.global.attributes,
    att.dimensions.attributes,
    att.responsibility.attribute.cert,
    att.source.attribute.source,
    
    ## (responsable) (responsible party) indicates the individual responsible for identifying and measuring the space
    attribute resp {
      list { data.pointer+ }
    }?,
    
    ## (dimension) indique si l'espace est vertical ou horizontal.
    attribute dim {
      
      ## l'espace est horizontal.
      "horizontal"
      | 
        ## l'espace est vertical.
        "vertical"
    }?,
    empty
  }
subst =
  
  ## ( substitution) regroupe une ou plusieurs parties de texte supprimées et une ou plusieurs parties de texte ajoutées, lorsque cette combinaison peut être considérée comme une intervention unique sur le texte. [11.3.1.5. ]
  element subst {
    ((add | del | model.milestoneLike)+)
    >> sch:pattern [
         id = "test21-subst-substContents1-constraint"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:subst"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "child::tei:add and child::tei:del"
             "\x{a}" ~
             "                  "
             sch:name [ ]
             " must have at least one child add and at least one child del"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.transcriptional.attributes,
    empty
  }
substJoin =
  
  ## (jointure de substitution) identifies a series of possibly fragmented additions, deletions or other revisions on a manuscript that combine to make up a single intervention in the text [11.3.1.5. ]
  element substJoin {
    (model.descLike | model.certLike)*,
    att.global.attributes,
    att.pointing.attributes,
    att.transcriptional.attributes,
    empty
  }
supplied =
  
  ## (texte restitué) permet d'encoder du texte restitué par l'auteur de la transcription ou par l'éditeur pour une raison quelconque, le plus souvent parce que le texte du document original ne peut être lu, par suite de dommages matériels ou de lacunes. [11.3.3.1. ]
  element supplied {
    macro.paraContent,
    att.global.attributes,
    att.editLike.attributes,
    empty
  }
surplus =
  
  ## (Texte superflu) permet d'encoder une partie de texte présente dans la source lorsque l'éditeur la considère superflue ou redondante. [11.3.3.1. ]
  element surplus {
    macro.paraContent,
    att.global.attributes,
    att.editLike.attributes,
    
    ## indique les raisons pour lesquelles on considère cette partie de texte comme superflue.
    attribute reason {
      list { data.word+ }
    }?,
    empty
  }
line =
  
  ## contains the transcription of a topographic line in the source document [11.2.2. ]
  element line {
    (text | model.global | model.gLike | model.linePart)*,
    att.typed.attributes,
    att.global.attributes,
    att.coordinated.attributes,
    empty
  }
listTranspose =
  
  ## supplies a list of transpositions, each of which is indicated at some point in a document typically by means of metamarks. [11.3.4.5. ]
  element listTranspose { transpose+, att.global.attributes, empty }
metamark =
  
  ## contains or describes any kind of graphic or written signal within a document the function of which is to determine how it should be read rather than forming part of the actual content of the document. [11.3.4.2. ]
  element metamark {
    macro.specialPara,
    att.spanning.attributes,
    att.placement.attributes,
    att.global.attributes,
    
    ## describes the function (for example status, insertion, deletion, transposition) of the mark.
    attribute function { data.word }?,
    
    ## identifies one or more elements to which the function indicated by the metamark applies.
    attribute target {
      list { data.pointer+ }
    }?,
    empty
  }
mod =
  
  ## represents any kind of modification identified within a single document. [11.3.4.1. ]
  element mod {
    macro.paraContent,
    att.global.attributes,
    att.transcriptional.attributes,
    att.typed.attributes,
    att.spanning.attributes,
    empty
  }
redo =
  
  ## indicates one or more cancelled interventions in a document which have subsequently been marked as reaffirmed or repeated. [11.3.4.4. ]
  element redo {
    empty,
    att.global.attributes,
    att.spanning.attributes,
    att.transcriptional.attributes,
    
    ## points to one or more elements representing the interventions which are being reasserted.
    attribute target {
      list { data.pointer+ }
    }?,
    empty
  }
retrace =
  
  ## contains a sequence of writing which has been retraced, for example by over-inking, to clarify or fix it. [11.3.4.3. ]
  element retrace {
    macro.paraContent,
    att.global.attributes,
    att.spanning.attributes,
    att.transcriptional.attributes,
    empty
  }
transpose =
  
  ## describes a single textual transposition as an ordered list of at least two pointers specifying the order in which the elements indicated should be re-combined. [11.3.4.5. ]
  element transpose { (ptr, ptr+), att.global.attributes, empty }
undo =
  
  ## indicates one or more marked-up interventions in a document which have subsequently been marked for cancellation. [11.3.4.4. ]
  element undo {
    empty,
    att.global.attributes,
    att.spanning.attributes,
    att.transcriptional.attributes,
    
    ## points to one or more elements representing the interventions which are to be reverted or undone.
    attribute target {
      list { data.pointer+ }
    }?,
    empty
  }
TEI =
  
  ## (document TEI) contient un seul document conforme à la TEI, qui comprend un en-tête TEI et un texte, soit de façon isolée, soit comme partie d’un élément teiCorpus. [4.  15.1. ]
  element TEI {
    (teiHeader,
     ((model.resourceLike+, \text?) | \text))
    >> sch:ns [ prefix = "tei" uri = "http://www.tei-c.org/ns/1.0" ]
    >> sch:ns [ prefix = "xs" uri = "http://www.w3.org/2001/XMLSchema" ]
    >> sch:ns [
         prefix = "rng"
         uri = "http://relaxng.org/ns/structure/1.0"
       ],
    att.global.attributes,
    
    ## la version majeure du schéma TEI
    attribute version { data.version }?,
    empty
  }
\text =
  
  ## (texte) contient un seul texte quelconque, simple ou composite, par exemple un poème ou une pièce de théâtre, un recueil d’essais, un roman, un dictionnaire ou un échantillon de corpus. [4.  15.1. ]
  element text {
    (model.global*,
     (front, model.global*)?,
     (body | group),
     model.global*,
     (back, model.global*)?),
    att.global.attributes,
    att.declaring.attributes,
    att.typed.attribute.subtype,
    
    ## caractérise l'élément en utilisant n'importe quel système ou typologie de classification approprié.
    attribute type {
      
      ##
      "X"
      | 
        ##
        "Y"
    }?,
    empty
  }
body =
  
  ## (corps du texte) contient la totalité du corps d’un seul texte simple, à l’exclusion de toute partie pré- ou post-liminaire. [4. ]
  element body {
    (model.global*,
     (model.divTop, (model.global | model.divTop)*)?,
     (model.divGenLike, (model.global | model.divGenLike)*)?,
     ((model.divLike, (model.global | model.divGenLike)*)+
      | (model.div1Like, (model.global | model.divGenLike)*)+
      | ((model.common, model.global*)+,
         ((model.divLike, (model.global | model.divGenLike)*)+
          | (model.div1Like, (model.global | model.divGenLike)*)+)?)),
     (model.divBottom, model.global*)*),
    att.magical.attributes,
    att.global.attributes,
    att.declaring.attributes,
    empty
  }
group =
  
  ## (groupe) contient un ensemble de textes distincts (ou des groupes de textes de ce type), considérés comme formant une unité, par exemple pour présenter les œuvres complètes d’un auteur, une suite d’essais en prose, etc. [4.  4.3.1.  15.1. ]
  element group {
    ((model.divTop | model.global)*,
     ((\text | group), (\text | group | model.global)*),
     model.divBottom*),
    att.global.attributes,
    att.declaring.attributes,
    att.typed.attributes,
    empty
  }
\div =
  
  ## (division du texte) contient une subdivision dans le texte préliminaire, dans le corps d’un texte ou dans le texte postliminaire. [4.1. ]
  element div {
    ((model.divTop | model.global)*,
     ((((model.divLike | model.divGenLike), model.global*)+
       | ((model.common, model.global*)+,
          ((model.divLike | model.divGenLike), model.global*)*)),
      (model.divBottom, model.global*)*)?),
    att.global.attributes,
    att.divLike.attributes,
    att.typed.attribute.subtype,
    att.declaring.attributes,
    
    ## freddy
    attribute type { xsd:integer }?,
    empty
  }
div1 =
  
  ## (division du texte de niveau 1) contient une subdivision de premier niveau dans le texte préliminaire, dans le corps d’un texte ou dans le texte postliminaire. [4.1.2. ]
  element div1 {
    ((model.divTop | model.global)*,
     ((((model.div2Like | model.divGenLike), model.global*)+
       | ((model.common, model.global*)+,
          ((model.div2Like | model.divGenLike), model.global*)*)),
      (model.divBottom, model.global*)*)?),
    att.global.attributes,
    att.divLike.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    empty
  }
div2 =
  
  ## (division du texte de niveau 2) contient une subdivision de deuxième niveau dans le texte prélimaire, dans le corps d’un texte ou dans le texte postliminaire. [4.1.2. ]
  element div2 {
    ((model.divTop | model.global)*,
     ((((model.div3Like | model.divGenLike), model.global*)+
       | ((model.common, model.global*)+,
          ((model.div3Like | model.divGenLike), model.global*)*)),
      (model.divBottom, model.global*)*)?),
    att.global.attributes,
    att.divLike.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    empty
  }
div3 =
  
  ## (division du texte de niveau 3) contient une subdivision de troisième niveau dans le texte préliminaire, dans le corps d’un texte ou dans le texte postliminaire. [4.1.2. ]
  element div3 {
    ((model.divTop | model.global)*,
     ((((model.div4Like | model.divGenLike), model.global*)+
       | ((model.common, model.global*)+,
          ((model.div4Like | model.divGenLike), model.global*)*)),
      (model.divBottom, model.global*)*)?),
    att.global.attributes,
    att.divLike.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    empty
  }
div4 =
  
  ## ( division du texte de niveau 4) contient une subdivision de quatrième niveau dans le texte préliminaire, dans le corps d’un texte ou dans le texte postliminaire. [4.1.2. ]
  element div4 {
    ((model.divTop | model.global)*,
     ((((model.div5Like | model.divGenLike), model.global*)+
       | ((model.common, model.global*)+,
          ((model.div5Like | model.divGenLike), model.global*)*)),
      (model.divBottom, model.global*)*)?),
    att.global.attributes,
    att.divLike.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    empty
  }
div5 =
  
  ## ( division du texte de niveau 5) contient une subdivision de cinquième niveau dans le texte préliminaire, dans le corps d’un texte ou dans le texte postliminaire. [4.1.2. ]
  element div5 {
    ((model.divTop | model.global)*,
     ((((model.div6Like | model.divGenLike), model.global*)+
       | ((model.common, model.global*)+,
          ((model.div6Like | model.divGenLike), model.global*)*)),
      (model.divBottom, model.global*)*)?),
    att.global.attributes,
    att.divLike.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    empty
  }
div6 =
  
  ## ( division du texte de niveau 6) contient une subdivision de sixième niveau dans le texte préliminaire, dans le corps d’un texte ou dans le texte postliminaire. [4.1.2. ]
  element div6 {
    ((model.divTop | model.global)*,
     ((((model.div7Like | model.divGenLike), model.global*)+
       | ((model.common, model.global*)+,
          ((model.div7Like | model.divGenLike), model.global*)*)),
      (model.divBottom, model.global*)*)?),
    att.global.attributes,
    att.divLike.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    empty
  }
div7 =
  
  ## ( division du texte de niveau 7) contient la plus petite subdivision possible dans le texte préliminaire, dans le corps d’un texte ou dans le texte postliminaire, plus grande néanmoins qu’un paragraphe. [4.1.2. ]
  element div7 {
    ((model.divTop | model.global)*,
     ((model.common, model.global*)+,
      (model.divBottom, model.global*)*)?),
    att.global.attributes,
    att.divLike.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    empty
  }
trailer =
  
  ## contient un titre de fin ou de bas de page à la fin d’une division du texte. [4.2.4.  4.2. ]
  element trailer {
    (text
     | lg
     | model.gLike
     | model.phrase
     | model.inter
     | model.lLike
     | model.global)*,
    att.global.attributes,
    att.typed.attributes,
    empty
  }
byline =
  
  ## (mention de responsabilité) indique la responsabilité principale pour une œuvre donnée sur la page de titre ou au début ou à la fin de l’œuvre. [4.2.2.  4.5. ]
  element byline {
    (text | model.gLike | model.phrase | docAuthor | model.global)*,
    att.global.attributes,
    empty
  }
dateline =
  
  ## (mention de date) contient une brève description des lieux, date, heure, etc. concernant la production d’une lettre, d’un article de journal ou d’un autre texte qui, placée au début ou à la fin, lui est associée comme en-tête ou annonce de fin. [4.2.2. ]
  element dateline {
    (text | model.gLike | model.phrase | model.global | docDate)*,
    att.global.attributes,
    empty
  }
argument =
  
  ## (argument) liste formelle ou description en texte libre des sujets traités dans une subdivision d’un texte [4.2.  4.6. ]
  element argument {
    ((model.global | model.headLike)*, (model.common, model.global*)+),
    att.global.attributes,
    empty
  }
epigraph =
  
  ## contient une citation, anonyme ou attribuée et qui apparaît au début d’une section ou d’un chapitre ou sur une page de titre. [4.2.3.  4.2.  4.6. ]
  element epigraph {
    (model.common | model.global)*, att.global.attributes, empty
  }
opener =
  
  ## (formule de début) regroupe la date, la mention de responsabilité, la formule de politesse et d'autres expressions de ce type dans un groupe préliminaire au début d’une division, en particulier au commencement d’une lettre. [4.2. ]
  element opener {
    (text
     | model.gLike
     | model.phrase
     | argument
     | byline
     | dateline
     | epigraph
     | salute
     | signed
     | model.global)*,
    att.global.attributes,
    empty
  }
closer =
  
  ## (formule finale) regroupe une formule de politesse, une indication d'une date et d'autres expressions semblables figurant comme expression à la fin d’une division, en particulier à la fin d’une lettre. [4.2.2.  4.2. ]
  element closer {
    (text
     | model.gLike
     | signed
     | dateline
     | salute
     | model.phrase
     | model.global)*,
    att.global.attributes,
    empty
  }
salute =
  
  ## (formule de politesse) contient un dédicace ou une formule de salut qui précède un avant-propos ou autre division du texte; ou bien encore la formule de politesse qui conclut une lettre, une préface, etc. [4.2.2. ]
  element salute { macro.paraContent, att.global.attributes, empty }
signed =
  
  ## (signature) contient la dernière salutation, ajoutée à un avant-propos, à une dédicace ou à une autre division du texte. [4.2.2. ]
  element signed { macro.paraContent, att.global.attributes, empty }
postscript =
  
  ## contient un post-scriptum, par exemple au bas d' une lettre. [4.2. ]
  element postscript {
    ((model.global | model.divTopPart)*,
     model.common,
     (model.global | model.common)*,
     (model.divBottomPart, model.global*)*),
    att.global.attributes,
    empty
  }
titlePage =
  
  ## (page de titre) contient la page de titre d’un texte qui figure dans les parties liminaires. [4.6. ]
  element titlePage {
    (model.global*,
     model.titlepagePart,
     (model.titlepagePart | model.global)*),
    att.global.attributes,
    
    ## classe la page de titre selon la typologie appropriée.
    attribute type { data.enumerated }?,
    empty
  }
docTitle =
  
  ## (titre du document) contient le titre d’un document, incluant la totalité de ses composants tels qu’ils sont donnés sur la page de titre. [4.6. ]
  element docTitle {
    (model.global*, (titlePart, model.global*)+),
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
titlePart =
  
  ## contient une section ou division du titre d’un ouvrage telle qu’elle est indiquée sur la page de titre. [4.6. ]
  element titlePart {
    macro.paraContent,
    att.global.attributes,
    
    ## précise le rôle de cette subdivision du titre.
    ## Suggested values include: 1] main; 2] sub(subordinate) ; 3] alt(alternate) ; 4] short; 5] desc(descriptive) 
    [ a:defaultValue = "main" ]
    attribute type {
      
      ## titre principal de l'oeuvre.
      "main"
      | 
        ## (sous-titre de l’ouvrage.) sous-titre de l'oeuvre.
        "sub"
      | 
        ## (titre alternatif de
        ##                         l’ouvrage.) autre titre de l'oeuvre.
        "alt"
      | 
        ## forme abrégée du titre.
        "short"
      | 
        ## (description paraphrastique de
        ##                             l’ouvrage.) texte qui paraphrase l'oeuvre.
        "desc"
      | xsd:Name
    }?,
    empty
  }
docAuthor =
  
  ## (auteur du document) contient le nom de l’auteur du document tel qu’il est donné sur la page de titre (ce nom est le plus souvent contenu dans une mention de responsabilité) . [4.6. ]
  element docAuthor {
    macro.phraseSeq,
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
imprimatur =
  
  ## contient une mention formalisée autorisant la publication d’un ouvrage, parfois exigée sur une page de titre ou à son verso. [4.6. ]
  element imprimatur { macro.paraContent, att.global.attributes, empty }
docEdition =
  
  ## (édition du document) contient une mention d’édition telle qu’elle figure sur la page de titre d’un document. [4.6. ]
  element docEdition { macro.paraContent, att.global.attributes, empty }
docImprint =
  
  ## (mention d'impression) contient la mention d'impression de l'éditeur (lieu et date de publication, nom de l’éditeur), telle qu’elle est généralement donnée au bas de la page de titre. [4.6. ]
  element docImprint {
    (text
     | model.gLike
     | model.phrase
     | pubPlace
     | docDate
     | publisher
     | model.global)*,
    att.global.attributes,
    empty
  }
docDate =
  
  ## (date du document) contient la date d’un document telle qu’elle est (généralement ) donnée sur une page de titre. [4.6. ]
  element docDate {
    macro.phraseSeq,
    att.global.attributes,
    
    ## donne la date dans une forme standard, c'est-à-dire. YYYY-MM-DD.
    attribute when { data.temporal.w3c }?,
    empty
  }
front =
  
  ## (texte préliminaire) contient tout ce qui est au début du document, avant le corps du texte : page de titre, dédicaces, préfaces, etc. [4.6.  4. ]
  element front {
    ((model.frontPart
      | model.pLike
      | model.pLike.front
      | model.global)*,
     (((model.div1Like,
        (model.div1Like | model.frontPart | model.global)*)
       | (model.divLike,
          (model.divLike | model.frontPart | model.global)*)),
      (model.divBottom, (model.divBottom | model.global)*)?)?),
    att.global.attributes,
    att.declaring.attributes,
    empty
  }
back =
  
  ## (texte annexe) contient tout supplément placé après la partie principale d'un texte : appendice, etc. [4.7.  4. ]
  element back {
    ((model.frontPart
      | model.pLike.front
      | model.pLike
      | model.listLike
      | model.global)*,
     ((model.div1Like,
       (model.frontPart | model.div1Like | model.global)*)
      | (model.divLike,
         (model.frontPart | model.divLike | model.global)*))?,
     (model.divBottomPart, (model.divBottomPart | model.global)*)?),
    att.magical.attributes,
    att.global.attributes,
    att.declaring.attributes,
    empty
  }
homer =
  
  ## A Simpsons character
  element homer { p }
att.magical.attributes = att.magical.attribute.degree
att.magical.attribute.degree =
  
  ##
  attribute degree {
    
    ##
    "abit"
    | 
      ##
      "alot"
    | 
      ##
      "entirely"
  }?
start = TEI
